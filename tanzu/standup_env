#!/usr/bin/env bash
# @file standup_env
# Stand up a test environment for Tanzu CLI
# @author Alister Lewis-Bowen <alister@lewis-bowen.org>

[[ -n $DEBUG ]] && set -x
set -eou pipefail

# shellcheck disable=SC2155
export DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
# shellcheck disable=SC2155
export TANZU_API_TOKEN=$(cat "$HOME/.config/csp-staging-token") # change to location of your stored CSP API Token

if ! which brew &> /dev/null; then
  echo "Homebrew not installed"
  exit 1
fi

cleanup() {
  if which tmc &> /dev/null; then
    rm -f /usr/local/bin/tmc
    rm -f /usr/local/etc/bash_completion.d/tmc
    rm -fR ~/.config/tmc
  fi
  if which tanzu &> /dev/null; then
    if brew list | grep tanzu-cli &> /dev/null; then
      brew uninstall tanzu-cli
    else
      rm -f /usr/local/bin/tanzu
      rm -f /usr/local/etc/bash_completion.d/tanzu
    fi
    rm -fR ~/.config/tanzu
  fi
}

install_tanzu() {
  if ! which tanzu &> /dev/null; then
    brew tap vmware-tanzu/tanzu
    brew update && brew install vmware-tanzu/tanzu/tanzu-cli
    brew link --overwrite tanzu-cli
  fi
}

configure_tanzu() {
  tanzu config eula accept          # accept EULA
  tanzu ceip-participation set true # enable CEIP
  # target staging environment for analytics
  tanzu config set env.TANZU_CLI_SUPERCOLLIDER_ENVIRONMENT staging
  # point at staging plugin registry
  tanzu config set env.TANZU_CLI_ADDITIONAL_PLUGIN_DISCOVERY_IMAGES_TEST_ONLY harbor-repo.vmware.com/tanzu_cli_stage/plugins/plugin-inventory:latest
  # tanzu plugin source init
}

create_tmc_unstable_context() {
  # NOTE: Can only get this to work if by dropping the https:// and adding :443
  tanzu context create --endpoint tanzumissioncontroluserorgstg.tmc-dev.cloud.vmware.com:443 --name tmc-unstable --staging
  # supplying TANZU_API_TOKEN not documented
}

create_tmc_stable_context() {
  # NOTE: Can only get this to work if by dropping the https:// and adding :443
  tanzu context create --endpoint tmc-users.stable.tmc-dev.cloud.vmware.com:443 --name tmc-stable --staging
  # supplying TANZU_API_TOKEN not documented
}

create_local_cluster_context() {
  "$DIR/tanzufy_cluster" # create a local cluster
}

cleanup
install_tanzu
configure_tanzu
create_tmc_stable_context
create_tmc_unstable_context
create_local_cluster_context

tanzu version
tanzu plugin source list
tanzu plugin list

# wish there was an easier way to show the current contexts
# @ref tanzu_prompt.sh
curent_contexts() {
  tanzu context list --current -o json | jq -r '.[] | .name'
}

# would like a better way to remove plugins by target
uninstall_tmc_plugins() {
  for i in $(tanzu plugin list -o json | jq -r '.[] | select(.target=="tmc") | .name'); do 
    tanzu plugin delete "$i" --yes
  done
}