swagger: '2.0'
info:
  description: This is Olympus server.
  version: 0.0.1
  title: Swagger Olympus
host: olympus.vmware.com
basePath: /v1alpha
schemes:
  - https
  - http
paths:
  /backuplocations/v1alpha/cloud/backuplocations:
    get:
      summary: List BackupLocations.
      operationId: listBackupLocation
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/backuplocationListBackupLocationsResponse'
      parameters:
        - name: query
          description: OQL query string.
          in: query
          required: false
          type: string
        - name: pagination_options.offset
          description: Offset at which to start returning records.
          in: query
          required: false
          type: string
          format: int64
        - name: pagination_options.size
          description: Number of records to return.
          in: query
          required: false
          type: string
          format: int64
        - name: search_scope.group
          description: Scope search to `group`; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: search_scope.org_id
          description: Scope search to `org_id`; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: search_scope.account
          description: Scope search to `account`; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: search_scope.name
          description: Scope search to `name`; supports globbing; default (*).
          in: query
          required: false
          type: string
      tags:
        - BackupLocationResourceService
    post:
      summary: Create a BackupLocation.
      operationId: createBackupLocation
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/backuplocationCreateBackupLocationResponse'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/backuplocationCreateBackupLocationRequest'
      tags:
        - BackupLocationResourceService
  '/backuplocations/v1alpha/cloud/backuplocations/{backuplocation.full_name.name}':
    put:
      summary: Update (overwrite) a BackupLocation.
      operationId: updateBackupLocation
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/backuplocationUpdateBackupLocationResponse'
      parameters:
        - name: backuplocation.full_name.name
          description: Name of the Backup Location.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/backuplocationUpdateBackupLocationRequest'
      tags:
        - BackupLocationResourceService
    patch:
      summary: Patch a BackupLocation.
      operationId: patchBackupLocation
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/backuplocationPatchBackupLocationResponse'
      parameters:
        - name: backuplocation.full_name.name
          description: Name of the Backup Location.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/backuplocationPatchBackupLocationRequest'
      tags:
        - BackupLocationResourceService
  '/backuplocations/v1alpha/cloud/backuplocations/{full_name.name}':
    get:
      summary: Get a BackupLocation.
      operationId: getBackupLocation
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/backuplocationGetBackupLocationResponse'
      parameters:
        - name: full_name.name
          description: Name of the Backup Location.
          in: path
          required: true
          type: string
        - name: full_name.org_id
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: full_name.account
          description: >-
            The reference to the provider account where the storage bucket was
            created.
          in: query
          required: false
          type: string
      tags:
        - BackupLocationResourceService
    delete:
      summary: Delete BackupLocation.
      operationId: deleteBackupLocation
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/backuplocationDeleteBackupLocationResponse'
      parameters:
        - name: full_name.name
          description: Name of the Backup Location.
          in: path
          required: true
          type: string
        - name: full_name.org_id
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: full_name.account
          description: >-
            The reference to the provider account where the storage bucket was
            created.
          in: query
          required: false
          type: string
      tags:
        - BackupLocationResourceService
  /snapshotlocations/v1alpha/cloud/snapshotlocations:
    get:
      summary: List SnapshotLocations.
      operationId: listSnapshotLocation
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/snapshotlocationListSnapshotLocationsResponse'
      parameters:
        - name: query
          description: OQL query string.
          in: query
          required: false
          type: string
        - name: pagination_options.offset
          description: Offset at which to start returning records.
          in: query
          required: false
          type: string
          format: int64
        - name: pagination_options.size
          description: Number of records to return.
          in: query
          required: false
          type: string
          format: int64
        - name: search_scope.group
          description: Scope search to `group`; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: search_scope.org_id
          description: Scope search to `org_id`; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: search_scope.account
          description: Scope search to `account`; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: search_scope.name
          description: Scope search to `name`; supports globbing; default (*).
          in: query
          required: false
          type: string
      tags:
        - SnapshotLocationResourceService
    post:
      summary: Create a SnapshotLocation.
      operationId: createSnapshotLocation
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/snapshotlocationCreateSnapshotLocationResponse'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/snapshotlocationCreateSnapshotLocationRequest'
      tags:
        - SnapshotLocationResourceService
  '/snapshotlocations/v1alpha/cloud/snapshotlocations/{full_name.name}':
    get:
      summary: Get a SnapshotLocation.
      operationId: getSnapshotLocation
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/snapshotlocationGetSnapshotLocationResponse'
      parameters:
        - name: full_name.name
          description: Name of the Snapshot Location.
          in: path
          required: true
          type: string
        - name: full_name.org_id
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: full_name.account
          description: >-
            The reference to the provider account where the volume snapshot
            location was created.
          in: query
          required: false
          type: string
      tags:
        - SnapshotLocationResourceService
    delete:
      summary: Delete SnapshotLocation.
      operationId: deleteSnapshotLocation
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/snapshotlocationDeleteSnapshotLocationResponse'
      parameters:
        - name: full_name.name
          description: Name of the Snapshot Location.
          in: path
          required: true
          type: string
        - name: full_name.org_id
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: full_name.account
          description: >-
            The reference to the provider account where the volume snapshot
            location was created.
          in: query
          required: false
          type: string
      tags:
        - SnapshotLocationResourceService
  '/snapshotlocations/v1alpha/cloud/snapshotlocations/{snapshotlocation.full_name.name}':
    put:
      summary: Update (overwrite) a SnapshotLocation.
      operationId: updateSnapshotLocation
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/snapshotlocationUpdateSnapshotLocationResponse'
      parameters:
        - name: snapshotlocation.full_name.name
          description: Name of the Snapshot Location.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/snapshotlocationUpdateSnapshotLocationRequest'
      tags:
        - SnapshotLocationResourceService
    patch:
      summary: Patch a SnapshotLocation.
      operationId: patchSnapshotLocation
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/snapshotlocationPatchSnapshotLocationResponse'
      parameters:
        - name: snapshotlocation.full_name.name
          description: Name of the Snapshot Location.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/snapshotlocationPatchSnapshotLocationRequest'
      tags:
        - SnapshotLocationResourceService
  '/brms/v1alpha/clusters/{brm.full_name.cluster_name}/brms':
    post:
      summary: Create a Brm.
      operationId: createBrm
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/brmCreateBrmResponse'
      parameters:
        - name: brm.full_name.cluster_name
          description: Name of parent Cluster.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/brmCreateBrmRequest'
      tags:
        - BrmResourceService
  '/brms/v1alpha/clusters/{brm.full_name.cluster_name}/brms/{brm.full_name.name}':
    put:
      summary: Update (overwrite) a Brm.
      operationId: updateBrm
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/brmUpdateBrmResponse'
      parameters:
        - name: brm.full_name.cluster_name
          description: Name of parent Cluster.
          in: path
          required: true
          type: string
        - name: brm.full_name.name
          description: Name of this BRM.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/brmUpdateBrmRequest'
      tags:
        - BrmResourceService
    patch:
      summary: Patch a Brm.
      operationId: patchBrm
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/brmPatchBrmResponse'
      parameters:
        - name: brm.full_name.cluster_name
          description: Name of parent Cluster.
          in: path
          required: true
          type: string
        - name: brm.full_name.name
          description: Name of this BRM.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/brmPatchBrmRequest'
      tags:
        - BrmResourceService
  '/brms/v1alpha/clusters/{full_name.cluster_name}/brms/{full_name.name}':
    get:
      summary: Get a Brm.
      operationId: getBrm
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/brmGetBrmResponse'
      parameters:
        - name: full_name.cluster_name
          description: Name of parent Cluster.
          in: path
          required: true
          type: string
        - name: full_name.name
          description: Name of this BRM.
          in: path
          required: true
          type: string
        - name: full_name.org_id
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: full_name.location
          description: Location of parent Cluster.
          in: query
          required: false
          type: string
      tags:
        - BrmResourceService
    delete:
      summary: Delete Brm.
      operationId: deleteBrm
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/brmDeleteBrmResponse'
      parameters:
        - name: full_name.cluster_name
          description: Name of parent Cluster.
          in: path
          required: true
          type: string
        - name: full_name.name
          description: Name of this BRM.
          in: path
          required: true
          type: string
        - name: full_name.org_id
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: full_name.location
          description: Location of parent Cluster.
          in: query
          required: false
          type: string
      tags:
        - BrmResourceService
  '/brms/v1alpha/clusters/{search_scope.cluster_name}/brms':
    get:
      summary: List Brms.
      operationId: listBrm
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/brmListBrmsResponse'
      parameters:
        - name: search_scope.cluster_name
          description: Scope search to `cluster_name`; supports globbing; default (*).
          in: path
          required: true
          type: string
        - name: query
          description: OQL query string.
          in: query
          required: false
          type: string
        - name: pagination_options.offset
          description: Offset at which to start returning records.
          in: query
          required: false
          type: string
          format: int64
        - name: pagination_options.size
          description: Number of records to return.
          in: query
          required: false
          type: string
          format: int64
        - name: search_scope.group
          description: Scope search to `group`; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: search_scope.org_id
          description: Scope search to `org_id`; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: search_scope.location
          description: Scope search to `location`; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: search_scope.name
          description: Scope search to `name`; supports globbing; default (*).
          in: query
          required: false
          type: string
      tags:
        - BrmResourceService
  '/backups/v1alpha/clusters/{backup.full_name.cluster_name}/brms/{backup.full_name.brm_name}/backups':
    post:
      summary: Create a Backup.
      operationId: createBackup
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/backupCreateBackupResponse'
      parameters:
        - name: backup.full_name.cluster_name
          description: Name of parent Cluster.
          in: path
          required: true
          type: string
        - name: backup.full_name.brm_name
          description: Name of backup restore and migration tool.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/backupCreateBackupRequest'
      tags:
        - BackupResourceService
  '/backups/v1alpha/clusters/{backup.full_name.cluster_name}/brms/{backup.full_name.brm_name}/backups/{backup.full_name.name}':
    put:
      summary: Update (overwrite) a Backup.
      operationId: updateBackup
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/backupUpdateBackupResponse'
      parameters:
        - name: backup.full_name.cluster_name
          description: Name of parent Cluster.
          in: path
          required: true
          type: string
        - name: backup.full_name.brm_name
          description: Name of backup restore and migration tool.
          in: path
          required: true
          type: string
        - name: backup.full_name.name
          description: Name of this Backup.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/backupUpdateBackupRequest'
      tags:
        - BackupResourceService
    patch:
      summary: Patch a Backup.
      operationId: patchBackup
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/backupPatchBackupResponse'
      parameters:
        - name: backup.full_name.cluster_name
          description: Name of parent Cluster.
          in: path
          required: true
          type: string
        - name: backup.full_name.brm_name
          description: Name of backup restore and migration tool.
          in: path
          required: true
          type: string
        - name: backup.full_name.name
          description: Name of this Backup.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/backupPatchBackupRequest'
      tags:
        - BackupResourceService
  '/backups/v1alpha/clusters/{full_name.cluster_name}/brms/{full_name.brm_name}/backups/{full_name.name}':
    get:
      summary: Get a Backup.
      operationId: getBackup
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/backupGetBackupResponse'
      parameters:
        - name: full_name.cluster_name
          description: Name of parent Cluster.
          in: path
          required: true
          type: string
        - name: full_name.brm_name
          description: Name of backup restore and migration tool.
          in: path
          required: true
          type: string
        - name: full_name.name
          description: Name of this Backup.
          in: path
          required: true
          type: string
        - name: full_name.org_id
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: full_name.location
          description: Location of parent Cluster.
          in: query
          required: false
          type: string
      tags:
        - BackupResourceService
    delete:
      summary: Delete Backup.
      operationId: deleteBackup
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/backupDeleteBackupResponse'
      parameters:
        - name: full_name.cluster_name
          description: Name of parent Cluster.
          in: path
          required: true
          type: string
        - name: full_name.brm_name
          description: Name of backup restore and migration tool.
          in: path
          required: true
          type: string
        - name: full_name.name
          description: Name of this Backup.
          in: path
          required: true
          type: string
        - name: full_name.org_id
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: full_name.location
          description: Location of parent Cluster.
          in: query
          required: false
          type: string
      tags:
        - BackupResourceService
  '/backups/v1alpha/clusters/{search_scope.cluster_name}/brms/{search_scope.brm_name}/backups':
    get:
      summary: List Backups.
      operationId: listBackup
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/backupListBackupsResponse'
      parameters:
        - name: search_scope.cluster_name
          description: Scope search to `cluster_name`; supports globbing; default (*).
          in: path
          required: true
          type: string
        - name: search_scope.brm_name
          description: Scope search to `brm_name`; supports globbing; default (*).
          in: path
          required: true
          type: string
        - name: query
          description: OQL query string.
          in: query
          required: false
          type: string
        - name: pagination_options.offset
          description: Offset at which to start returning records.
          in: query
          required: false
          type: string
          format: int64
        - name: pagination_options.size
          description: Number of records to return.
          in: query
          required: false
          type: string
          format: int64
        - name: search_scope.group
          description: Scope search to `group`; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: search_scope.org_id
          description: Scope search to `org_id`; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: search_scope.location
          description: Scope search to `location`; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: search_scope.name
          description: Scope search to `name`; supports globbing; default (*).
          in: query
          required: false
          type: string
      tags:
        - BackupResourceService
  '/clusterbackuplocations/v1alpha/clusters/{clusterbackuplocation.full_name.cluster_name}/brms/{clusterbackuplocation.full_name.brm_name}/clusterbackuplocations':
    post:
      summary: Create a ClusterBackupLocation.
      operationId: createClusterBackupLocation
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/clusterbackuplocationCreateClusterBackupLocationResponse
      parameters:
        - name: clusterbackuplocation.full_name.cluster_name
          description: Name of parent Cluster.
          in: path
          required: true
          type: string
        - name: clusterbackuplocation.full_name.brm_name
          description: Name of backup restore and migration tool.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/clusterbackuplocationCreateClusterBackupLocationRequest
      tags:
        - ClusterBackupLocationResourceService
  '/clusterbackuplocations/v1alpha/clusters/{clusterbackuplocation.full_name.cluster_name}/brms/{clusterbackuplocation.full_name.brm_name}/clusterbackuplocations/{clusterbackuplocation.full_name.name}':
    put:
      summary: Update (overwrite) a ClusterBackupLocation.
      operationId: updateClusterBackupLocation
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/clusterbackuplocationUpdateClusterBackupLocationResponse
      parameters:
        - name: clusterbackuplocation.full_name.cluster_name
          description: Name of parent Cluster.
          in: path
          required: true
          type: string
        - name: clusterbackuplocation.full_name.brm_name
          description: Name of backup restore and migration tool.
          in: path
          required: true
          type: string
        - name: clusterbackuplocation.full_name.name
          description: Name of this Backup Location.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/clusterbackuplocationUpdateClusterBackupLocationRequest
      tags:
        - ClusterBackupLocationResourceService
    patch:
      summary: Patch a ClusterBackupLocation.
      operationId: patchClusterBackupLocation
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/clusterbackuplocationPatchClusterBackupLocationResponse
      parameters:
        - name: clusterbackuplocation.full_name.cluster_name
          description: Name of parent Cluster.
          in: path
          required: true
          type: string
        - name: clusterbackuplocation.full_name.brm_name
          description: Name of backup restore and migration tool.
          in: path
          required: true
          type: string
        - name: clusterbackuplocation.full_name.name
          description: Name of this Backup Location.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/clusterbackuplocationPatchClusterBackupLocationRequest
      tags:
        - ClusterBackupLocationResourceService
  '/clusterbackuplocations/v1alpha/clusters/{full_name.cluster_name}/brms/{full_name.brm_name}/clusterbackuplocations/{full_name.name}':
    get:
      summary: Get a ClusterBackupLocation.
      operationId: getClusterBackupLocation
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/clusterbackuplocationGetClusterBackupLocationResponse
      parameters:
        - name: full_name.cluster_name
          description: Name of parent Cluster.
          in: path
          required: true
          type: string
        - name: full_name.brm_name
          description: Name of backup restore and migration tool.
          in: path
          required: true
          type: string
        - name: full_name.name
          description: Name of this Backup Location.
          in: path
          required: true
          type: string
        - name: full_name.org_id
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: full_name.location
          description: Location of parent Cluster.
          in: query
          required: false
          type: string
      tags:
        - ClusterBackupLocationResourceService
    delete:
      summary: Delete ClusterBackupLocation.
      operationId: deleteClusterBackupLocation
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/clusterbackuplocationDeleteClusterBackupLocationResponse
      parameters:
        - name: full_name.cluster_name
          description: Name of parent Cluster.
          in: path
          required: true
          type: string
        - name: full_name.brm_name
          description: Name of backup restore and migration tool.
          in: path
          required: true
          type: string
        - name: full_name.name
          description: Name of this Backup Location.
          in: path
          required: true
          type: string
        - name: full_name.org_id
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: full_name.location
          description: Location of parent Cluster.
          in: query
          required: false
          type: string
      tags:
        - ClusterBackupLocationResourceService
  '/clusterbackuplocations/v1alpha/clusters/{search_scope.cluster_name}/brms/{search_scope.brm_name}/clusterbackuplocations':
    get:
      summary: List ClusterBackupLocations.
      operationId: listClusterBackupLocation
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/clusterbackuplocationListClusterBackupLocationsResponse
      parameters:
        - name: search_scope.cluster_name
          description: Scope search to `cluster_name`; supports globbing; default (*).
          in: path
          required: true
          type: string
        - name: search_scope.brm_name
          description: Scope search to `brm_name`; supports globbing; default (*).
          in: path
          required: true
          type: string
        - name: query
          description: OQL query string.
          in: query
          required: false
          type: string
        - name: pagination_options.offset
          description: Offset at which to start returning records.
          in: query
          required: false
          type: string
          format: int64
        - name: pagination_options.size
          description: Number of records to return.
          in: query
          required: false
          type: string
          format: int64
        - name: search_scope.group
          description: Scope search to `group`; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: search_scope.org_id
          description: Scope search to `org_id`; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: search_scope.location
          description: Scope search to `location`; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: search_scope.name
          description: Scope search to `name`; supports globbing; default (*).
          in: query
          required: false
          type: string
      tags:
        - ClusterBackupLocationResourceService
  '/restores/v1alpha/clusters/{full_name.cluster_name}/brms/{full_name.brm_name}/restores/{full_name.name}':
    get:
      summary: Get a Restore.
      operationId: getRestore
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/restoreGetRestoreResponse'
      parameters:
        - name: full_name.cluster_name
          description: Name of parent Cluster.
          in: path
          required: true
          type: string
        - name: full_name.brm_name
          description: Name of backup restore and migration tool.
          in: path
          required: true
          type: string
        - name: full_name.name
          description: Name of this Restore.
          in: path
          required: true
          type: string
        - name: full_name.org_id
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: full_name.location
          description: Location of parent Cluster.
          in: query
          required: false
          type: string
      tags:
        - RestoreResourceService
    delete:
      summary: Delete Restore.
      operationId: deleteRestore
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/restoreDeleteRestoreResponse'
      parameters:
        - name: full_name.cluster_name
          description: Name of parent Cluster.
          in: path
          required: true
          type: string
        - name: full_name.brm_name
          description: Name of backup restore and migration tool.
          in: path
          required: true
          type: string
        - name: full_name.name
          description: Name of this Restore.
          in: path
          required: true
          type: string
        - name: full_name.org_id
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: full_name.location
          description: Location of parent Cluster.
          in: query
          required: false
          type: string
      tags:
        - RestoreResourceService
  '/restores/v1alpha/clusters/{restore.full_name.cluster_name}/brms/{restore.full_name.brm_name}/restores':
    post:
      summary: Create a Restore.
      operationId: createRestore
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/restoreCreateRestoreResponse'
      parameters:
        - name: restore.full_name.cluster_name
          description: Name of parent Cluster.
          in: path
          required: true
          type: string
        - name: restore.full_name.brm_name
          description: Name of backup restore and migration tool.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/restoreCreateRestoreRequest'
      tags:
        - RestoreResourceService
  '/restores/v1alpha/clusters/{restore.full_name.cluster_name}/brms/{restore.full_name.brm_name}/restores/{restore.full_name.name}':
    put:
      summary: Update (overwrite) a Restore.
      operationId: updateRestore
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/restoreUpdateRestoreResponse'
      parameters:
        - name: restore.full_name.cluster_name
          description: Name of parent Cluster.
          in: path
          required: true
          type: string
        - name: restore.full_name.brm_name
          description: Name of backup restore and migration tool.
          in: path
          required: true
          type: string
        - name: restore.full_name.name
          description: Name of this Restore.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/restoreUpdateRestoreRequest'
      tags:
        - RestoreResourceService
    patch:
      summary: Patch a Restore.
      operationId: patchRestore
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/restorePatchRestoreResponse'
      parameters:
        - name: restore.full_name.cluster_name
          description: Name of parent Cluster.
          in: path
          required: true
          type: string
        - name: restore.full_name.brm_name
          description: Name of backup restore and migration tool.
          in: path
          required: true
          type: string
        - name: restore.full_name.name
          description: Name of this Restore.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/restorePatchRestoreRequest'
      tags:
        - RestoreResourceService
  '/restores/v1alpha/clusters/{search_scope.cluster_name}/brms/{search_scope.brm_name}/restores':
    get:
      summary: List Restores.
      operationId: listRestore
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/restoreListRestoresResponse'
      parameters:
        - name: search_scope.cluster_name
          description: Scope search to `cluster_name`; supports globbing; default (*).
          in: path
          required: true
          type: string
        - name: search_scope.brm_name
          description: Scope search to `brm_name`; supports globbing; default (*).
          in: path
          required: true
          type: string
        - name: query
          description: OQL query string.
          in: query
          required: false
          type: string
        - name: pagination_options.offset
          description: Offset at which to start returning records.
          in: query
          required: false
          type: string
          format: int64
        - name: pagination_options.size
          description: Number of records to return.
          in: query
          required: false
          type: string
          format: int64
        - name: search_scope.group
          description: Scope search to `group`; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: search_scope.org_id
          description: Scope search to `org_id`; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: search_scope.location
          description: Scope search to `location`; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: search_scope.name
          description: Scope search to `name`; supports globbing; default (*).
          in: query
          required: false
          type: string
      tags:
        - RestoreResourceService
  '/schedules/v1alpha/clusters/{full_name.cluster_name}/brms/{full_name.brm_name}/schedules/{full_name.name}':
    get:
      summary: Get a Schedule.
      operationId: getSchedule
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/scheduleGetScheduleResponse'
      parameters:
        - name: full_name.cluster_name
          description: Name of parent Cluster.
          in: path
          required: true
          type: string
        - name: full_name.brm_name
          description: Name of backup restore and migration tool.
          in: path
          required: true
          type: string
        - name: full_name.name
          description: Name of this Schedule.
          in: path
          required: true
          type: string
        - name: full_name.org_id
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: full_name.location
          description: Location of parent Cluster.
          in: query
          required: false
          type: string
      tags:
        - ScheduleResourceService
    delete:
      summary: Delete Schedule.
      operationId: deleteSchedule
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/scheduleDeleteScheduleResponse'
      parameters:
        - name: full_name.cluster_name
          description: Name of parent Cluster.
          in: path
          required: true
          type: string
        - name: full_name.brm_name
          description: Name of backup restore and migration tool.
          in: path
          required: true
          type: string
        - name: full_name.name
          description: Name of this Schedule.
          in: path
          required: true
          type: string
        - name: full_name.org_id
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: full_name.location
          description: Location of parent Cluster.
          in: query
          required: false
          type: string
      tags:
        - ScheduleResourceService
  '/schedules/v1alpha/clusters/{schedule.full_name.cluster_name}/brms/{schedule.full_name.brm_name}/schedules':
    post:
      summary: Create a Schedule.
      operationId: createSchedule
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/scheduleCreateScheduleResponse'
      parameters:
        - name: schedule.full_name.cluster_name
          description: Name of parent Cluster.
          in: path
          required: true
          type: string
        - name: schedule.full_name.brm_name
          description: Name of backup restore and migration tool.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/scheduleCreateScheduleRequest'
      tags:
        - ScheduleResourceService
  '/schedules/v1alpha/clusters/{schedule.full_name.cluster_name}/brms/{schedule.full_name.brm_name}/schedules/{schedule.full_name.name}':
    put:
      summary: Update (overwrite) a Schedule.
      operationId: updateSchedule
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/scheduleUpdateScheduleResponse'
      parameters:
        - name: schedule.full_name.cluster_name
          description: Name of parent Cluster.
          in: path
          required: true
          type: string
        - name: schedule.full_name.brm_name
          description: Name of backup restore and migration tool.
          in: path
          required: true
          type: string
        - name: schedule.full_name.name
          description: Name of this Schedule.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/scheduleUpdateScheduleRequest'
      tags:
        - ScheduleResourceService
    patch:
      summary: Patch a Schedule.
      operationId: patchSchedule
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/schedulePatchScheduleResponse'
      parameters:
        - name: schedule.full_name.cluster_name
          description: Name of parent Cluster.
          in: path
          required: true
          type: string
        - name: schedule.full_name.brm_name
          description: Name of backup restore and migration tool.
          in: path
          required: true
          type: string
        - name: schedule.full_name.name
          description: Name of this Schedule.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/schedulePatchScheduleRequest'
      tags:
        - ScheduleResourceService
  '/schedules/v1alpha/clusters/{search_scope.cluster_name}/brms/{search_scope.brm_name}/schedules':
    get:
      summary: List Schedules.
      operationId: listSchedule
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/scheduleListSchedulesResponse'
      parameters:
        - name: search_scope.cluster_name
          description: Scope search to `cluster_name`; supports globbing; default (*).
          in: path
          required: true
          type: string
        - name: search_scope.brm_name
          description: Scope search to `brm_name`; supports globbing; default (*).
          in: path
          required: true
          type: string
        - name: query
          description: OQL query string.
          in: query
          required: false
          type: string
        - name: pagination_options.offset
          description: Offset at which to start returning records.
          in: query
          required: false
          type: string
          format: int64
        - name: pagination_options.size
          description: Number of records to return.
          in: query
          required: false
          type: string
          format: int64
        - name: search_scope.group
          description: Scope search to `group`; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: search_scope.org_id
          description: Scope search to `org_id`; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: search_scope.location
          description: Scope search to `location`; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: search_scope.name
          description: Scope search to `name`; supports globbing; default (*).
          in: query
          required: false
          type: string
      tags:
        - ScheduleResourceService
  '/clustersnapshotlocations/v1alpha/clusters/{clustersnapshotlocation.full_name.cluster_name}/brms/{clustersnapshotlocation.full_name.brm_name}/clustersnapshotlocations':
    post:
      summary: Create a ClusterSnapshotLocation.
      operationId: createClusterSnapshotLocation
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/clustersnapshotlocationCreateClusterSnapshotLocationResponse
      parameters:
        - name: clustersnapshotlocation.full_name.cluster_name
          description: Name of parent Cluster.
          in: path
          required: true
          type: string
        - name: clustersnapshotlocation.full_name.brm_name
          description: Name of backup restore and migration tool.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/clustersnapshotlocationCreateClusterSnapshotLocationRequest
      tags:
        - ClusterSnapshotLocationResourceService
  '/clustersnapshotlocations/v1alpha/clusters/{clustersnapshotlocation.full_name.cluster_name}/brms/{clustersnapshotlocation.full_name.brm_name}/clustersnapshotlocations/{clustersnapshotlocation.full_name.name}':
    put:
      summary: Update (overwrite) a ClusterSnapshotLocation.
      operationId: updateClusterSnapshotLocation
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/clustersnapshotlocationUpdateClusterSnapshotLocationResponse
      parameters:
        - name: clustersnapshotlocation.full_name.cluster_name
          description: Name of parent Cluster.
          in: path
          required: true
          type: string
        - name: clustersnapshotlocation.full_name.brm_name
          description: Name of backup restore and migration tool.
          in: path
          required: true
          type: string
        - name: clustersnapshotlocation.full_name.name
          description: Name of this Snapshot location.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/clustersnapshotlocationUpdateClusterSnapshotLocationRequest
      tags:
        - ClusterSnapshotLocationResourceService
    patch:
      summary: Patch a ClusterSnapshotLocation.
      operationId: patchClusterSnapshotLocation
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/clustersnapshotlocationPatchClusterSnapshotLocationResponse
      parameters:
        - name: clustersnapshotlocation.full_name.cluster_name
          description: Name of parent Cluster.
          in: path
          required: true
          type: string
        - name: clustersnapshotlocation.full_name.brm_name
          description: Name of backup restore and migration tool.
          in: path
          required: true
          type: string
        - name: clustersnapshotlocation.full_name.name
          description: Name of this Snapshot location.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/clustersnapshotlocationPatchClusterSnapshotLocationRequest
      tags:
        - ClusterSnapshotLocationResourceService
  '/clustersnapshotlocations/v1alpha/clusters/{full_name.cluster_name}/brms/{full_name.brm_name}/clustersnapshotlocations/{full_name.name}':
    get:
      summary: Get a ClusterSnapshotLocation.
      operationId: getClusterSnapshotLocation
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/clustersnapshotlocationGetClusterSnapshotLocationResponse
      parameters:
        - name: full_name.cluster_name
          description: Name of parent Cluster.
          in: path
          required: true
          type: string
        - name: full_name.brm_name
          description: Name of backup restore and migration tool.
          in: path
          required: true
          type: string
        - name: full_name.name
          description: Name of this Snapshot location.
          in: path
          required: true
          type: string
        - name: full_name.org_id
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: full_name.location
          description: Location of parent Cluster.
          in: query
          required: false
          type: string
      tags:
        - ClusterSnapshotLocationResourceService
    delete:
      summary: Delete ClusterSnapshotLocation.
      operationId: deleteClusterSnapshotLocation
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/clustersnapshotlocationDeleteClusterSnapshotLocationResponse
      parameters:
        - name: full_name.cluster_name
          description: Name of parent Cluster.
          in: path
          required: true
          type: string
        - name: full_name.brm_name
          description: Name of backup restore and migration tool.
          in: path
          required: true
          type: string
        - name: full_name.name
          description: Name of this Snapshot location.
          in: path
          required: true
          type: string
        - name: full_name.org_id
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: full_name.location
          description: Location of parent Cluster.
          in: query
          required: false
          type: string
      tags:
        - ClusterSnapshotLocationResourceService
  '/clustersnapshotlocations/v1alpha/clusters/{search_scope.cluster_name}/brms/{search_scope.brm_name}/clustersnapshotlocations':
    get:
      summary: List ClusterSnapshotLocations.
      operationId: listClusterSnapshotLocation
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/clustersnapshotlocationListClusterSnapshotLocationsResponse
      parameters:
        - name: search_scope.cluster_name
          description: Scope search to `cluster_name`; supports globbing; default (*).
          in: path
          required: true
          type: string
        - name: search_scope.brm_name
          description: Scope search to `brm_name`; supports globbing; default (*).
          in: path
          required: true
          type: string
        - name: query
          description: OQL query string.
          in: query
          required: false
          type: string
        - name: pagination_options.offset
          description: Offset at which to start returning records.
          in: query
          required: false
          type: string
          format: int64
        - name: pagination_options.size
          description: Number of records to return.
          in: query
          required: false
          type: string
          format: int64
        - name: search_scope.group
          description: Scope search to `group`; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: search_scope.org_id
          description: Scope search to `org_id`; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: search_scope.location
          description: Scope search to `location`; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: search_scope.name
          description: Scope search to `name`; supports globbing; default (*).
          in: query
          required: false
          type: string
      tags:
        - ClusterSnapshotLocationResourceService
  '/healths/v1alpha/clusters/{full_name.cluster_name}/healths/{full_name.name}':
    get:
      summary: Get a Health.
      operationId: getHealth
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/healthGetHealthResponse'
      parameters:
        - name: full_name.cluster_name
          description: Name of the cluster.
          in: path
          required: true
          type: string
        - name: full_name.name
          description: Name of the cluster health.
          in: path
          required: true
          type: string
        - name: full_name.org_id
          description: Org ID of the cluster organization.
          in: query
          required: false
          type: string
        - name: full_name.location
          description: Location of the cluster.
          in: query
          required: false
          type: string
      tags:
        - HealthResourceService
  '/healths/v1alpha/clusters/{search_scope.cluster_name}/healths':
    get:
      summary: List Healths.
      operationId: listHealth
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/healthListHealthsResponse'
      parameters:
        - name: search_scope.cluster_name
          description: Scope search to `cluster_name`; supports globbing; default (*).
          in: path
          required: true
          type: string
        - name: query
          description: OQL query string.
          in: query
          required: false
          type: string
        - name: pagination_options.offset
          description: Offset at which to start returning records.
          in: query
          required: false
          type: string
          format: int64
        - name: pagination_options.size
          description: Number of records to return.
          in: query
          required: false
          type: string
          format: int64
        - name: search_scope.group
          description: Scope search to `group`; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: search_scope.org_id
          description: Scope search to `org_id`; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: search_scope.location
          description: Scope search to `location`; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: search_scope.name
          description: Scope search to `name`; supports globbing; default (*).
          in: query
          required: false
          type: string
      tags:
        - HealthResourceService
  '/inspections/v1alpha/clusters/{full_name.cluster_name}/inspections/{full_name.name}':
    get:
      summary: Get a Inspection.
      operationId: getInspection
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/inspectionGetInspectionResponse'
      parameters:
        - name: full_name.cluster_name
          description: Name of the cluster.
          in: path
          required: true
          type: string
        - name: full_name.name
          description: Name of the inspection object.
          in: path
          required: true
          type: string
        - name: full_name.org_id
          description: Org ID of the cluster organization.
          in: query
          required: false
          type: string
        - name: full_name.location
          description: Location of the cluster.
          in: query
          required: false
          type: string
      tags:
        - InspectionResourceService
    delete:
      summary: Delete Inspection.
      operationId: deleteInspection
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/inspectionDeleteInspectionResponse'
      parameters:
        - name: full_name.cluster_name
          description: Name of the cluster.
          in: path
          required: true
          type: string
        - name: full_name.name
          description: Name of the inspection object.
          in: path
          required: true
          type: string
        - name: full_name.org_id
          description: Org ID of the cluster organization.
          in: query
          required: false
          type: string
        - name: full_name.location
          description: Location of the cluster.
          in: query
          required: false
          type: string
      tags:
        - InspectionResourceService
  '/inspections/v1alpha/clusters/{inspection.full_name.cluster_name}/inspections':
    post:
      summary: Create a Inspection.
      operationId: createInspection
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/inspectionCreateInspectionResponse'
      parameters:
        - name: inspection.full_name.cluster_name
          description: Name of the cluster.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/inspectionCreateInspectionRequest'
      tags:
        - InspectionResourceService
  '/inspections/v1alpha/clusters/{inspection.full_name.cluster_name}/inspections/{inspection.full_name.name}':
    put:
      summary: Update (overwrite) a Inspection.
      operationId: updateInspection
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/inspectionUpdateInspectionResponse'
      parameters:
        - name: inspection.full_name.cluster_name
          description: Name of the cluster.
          in: path
          required: true
          type: string
        - name: inspection.full_name.name
          description: Name of the inspection object.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/inspectionUpdateInspectionRequest'
      tags:
        - InspectionResourceService
    patch:
      summary: Patch a Inspection.
      operationId: patchInspection
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/inspectionPatchInspectionResponse'
      parameters:
        - name: inspection.full_name.cluster_name
          description: Name of the cluster.
          in: path
          required: true
          type: string
        - name: inspection.full_name.name
          description: Name of the inspection object.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/inspectionPatchInspectionRequest'
      tags:
        - InspectionResourceService
  '/inspections/v1alpha/clusters/{search_scope.cluster_name}/inspections':
    get:
      summary: List Inspections.
      operationId: listInspection
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/inspectionListInspectionsResponse'
      parameters:
        - name: search_scope.cluster_name
          description: Scope search to `cluster_name`; supports globbing; default (*).
          in: path
          required: true
          type: string
        - name: query
          description: OQL query string.
          in: query
          required: false
          type: string
        - name: pagination_options.offset
          description: Offset at which to start returning records.
          in: query
          required: false
          type: string
          format: int64
        - name: pagination_options.size
          description: Number of records to return.
          in: query
          required: false
          type: string
          format: int64
        - name: search_scope.group
          description: Scope search to `group`; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: search_scope.org_id
          description: Scope search to `org_id`; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: search_scope.location
          description: Scope search to `location`; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: search_scope.name
          description: Scope search to `name`; supports globbing; default (*).
          in: query
          required: false
          type: string
      tags:
        - InspectionResourceService
  '/namespaces/v1alpha/clusters/{full_name.cluster_name}/namespaces/{full_name.name}':
    get:
      summary: Get a Namespace.
      operationId: getNamespace
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/namespaceGetNamespaceResponse'
      parameters:
        - name: full_name.cluster_name
          description: Name of parent Cluster.
          in: path
          required: true
          type: string
        - name: full_name.name
          description: Name of this Namespace.
          in: path
          required: true
          type: string
        - name: full_name.org_id
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: full_name.location
          description: Location of parent Cluster.
          in: query
          required: false
          type: string
      tags:
        - NamespaceResourceService
    delete:
      summary: Delete Namespace.
      operationId: deleteNamespace
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/namespaceDeleteNamespaceResponse'
      parameters:
        - name: full_name.cluster_name
          description: Name of parent Cluster.
          in: path
          required: true
          type: string
        - name: full_name.name
          description: Name of this Namespace.
          in: path
          required: true
          type: string
        - name: full_name.org_id
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: full_name.location
          description: Location of parent Cluster.
          in: query
          required: false
          type: string
      tags:
        - NamespaceResourceService
  '/namespaces/v1alpha/clusters/{namespace.full_name.cluster_name}/namespaces':
    post:
      summary: Create a Namespace.
      operationId: createNamespace
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/namespaceCreateNamespaceResponse'
      parameters:
        - name: namespace.full_name.cluster_name
          description: Name of parent Cluster.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/namespaceCreateNamespaceRequest'
      tags:
        - NamespaceResourceService
  '/namespaces/v1alpha/clusters/{namespace.full_name.cluster_name}/namespaces/{namespace.full_name.name}':
    put:
      summary: Update (overwrite) a Namespace.
      operationId: updateNamespace
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/namespaceUpdateNamespaceResponse'
      parameters:
        - name: namespace.full_name.cluster_name
          description: Name of parent Cluster.
          in: path
          required: true
          type: string
        - name: namespace.full_name.name
          description: Name of this Namespace.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/namespaceUpdateNamespaceRequest'
      tags:
        - NamespaceResourceService
    patch:
      summary: Patch a Namespace.
      operationId: patchNamespace
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/namespacePatchNamespaceResponse'
      parameters:
        - name: namespace.full_name.cluster_name
          description: Name of parent Cluster.
          in: path
          required: true
          type: string
        - name: namespace.full_name.name
          description: Name of this Namespace.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/namespacePatchNamespaceRequest'
      tags:
        - NamespaceResourceService
  '/namespaces/v1alpha/clusters/{search_scope.cluster_name}/namespaces':
    get:
      summary: List Namespaces.
      operationId: listNamespace
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/namespaceListNamespacesResponse'
      parameters:
        - name: search_scope.cluster_name
          description: Scope search to `cluster_name`; supports globbing; default (*).
          in: path
          required: true
          type: string
        - name: query
          description: OQL query string.
          in: query
          required: false
          type: string
        - name: pagination_options.offset
          description: Offset at which to start returning records.
          in: query
          required: false
          type: string
          format: int64
        - name: pagination_options.size
          description: Number of records to return.
          in: query
          required: false
          type: string
          format: int64
        - name: search_scope.group
          description: Scope search to `group`; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: search_scope.org_id
          description: Scope search to `org_id`; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: search_scope.location
          description: Scope search to `location`; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: search_scope.name
          description: Scope search to `name`; supports globbing; default (*).
          in: query
          required: false
          type: string
      tags:
        - NamespaceResourceService
definitions:
  ResourceStatusState:
    type: string
    enum:
      - UNKNOWN
      - PENDING
      - PROCESSING
      - COMPLETE
      - ERROR
      - HEALTHY
      - WARNING
      - UNHEALTHY
    default: UNKNOWN
    description: |-
      State describes the state of a resource.

       - UNKNOWN: Unknown state.
       - PENDING: Resource is pending processing.
       - PROCESSING: Processing the resource.
       - COMPLETE: Processing complete.
       - ERROR: Error in processing.
       - HEALTHY: Resource is healthy.
       - WARNING: Resource is in warning state.
       - UNHEALTHY: Resource is unhealthy.
  WatchBackupLocationsResponseEventType:
    type: string
    enum:
      - CREATE
      - UPDATE
      - DELETE
    default: CREATE
    description: |-
      Possible types of events.

       - CREATE: Create event sent.
       - UPDATE: Update event sent.
       - DELETE: Delete event sent.
  backuplocationAzureStorageConfiguration:
    type: object
    properties:
      resource_group:
        type: string
        description: >-
          Name of the resource group containing the storage account for this
          backup storage location.
      storage_accont:
        type: string
        description: Name of the storage account for this backup storage location.
    description: Azure specific storage configuration details.
  backuplocationBackupLocation:
    type: object
    properties:
      type_meta:
        $ref: '#/definitions/metaTypeMeta'
        description: Metadata describing the type of the resource.
      full_name:
        $ref: '#/definitions/backuplocationFullName'
        description: Full name for the BackupLocation.
      object_meta:
        $ref: '#/definitions/metaObjectMeta'
        description: Metadata for the backup location object.
      spec:
        $ref: '#/definitions/backuplocationBackupLocationSpec'
        description: Spec for the backup location.
      status:
        $ref: '#/definitions/backuplocationBackupLocationStatus'
        description: Status of the backup location.
    description: >-
      BackupLocation resource is used for platform operator to create target
      location for backup.
  backuplocationBackupLocationSpec:
    type: object
    properties:
      provider:
        type: string
        description: >-
          The name for whichever cloud provider will be used to actually store
          the backups, such as: aws, azure and gcp.
      config:
        $ref: '#/definitions/backuplocationProviderSpecificStorageConfig'
        description: Provider-specific storage configuration fields.
      bucket:
        type: string
        description: The bucket to use for object storage.
      region:
        type: string
        description: The region of the bucket origin. Optional.
      secret_name:
        type: string
        description: The name of secret to be used to access the bucket.
    description: The backup location spec.
  backuplocationBackupLocationStatus:
    type: object
    properties:
      status:
        $ref: '#/definitions/statusResourceStatus'
        description: Common statuses.
    description: Status of the backup location resource.
  backuplocationCreateBackupLocationRequest:
    type: object
    properties:
      backuplocation:
        $ref: '#/definitions/backuplocationBackupLocation'
        description: BackupLocation to create.
    description: Request to create a BackupLocation.
  backuplocationCreateBackupLocationResponse:
    type: object
    properties:
      backuplocation:
        $ref: '#/definitions/backuplocationBackupLocation'
        description: BackupLocation created.
    description: Response from creating a BackupLocation.
  backuplocationDeleteBackupLocationResponse:
    type: object
    properties:
      message:
        type: string
        description: Message regarding deletion.
    description: Response from deleting BackupLocation.
  backuplocationFullName:
    type: object
    properties:
      org_id:
        type: string
        description: ID of Organization.
      account:
        type: string
        description: >-
          The reference to the provider account where the storage bucket was
          created.
      name:
        type: string
        description: Name of the Backup Location.
    description: |-
      Full name of the resource. This includes the object name along
      with any parents or further identifiers.
  backuplocationGCPStorageConfiguration:
    type: object
    description: GCP does not have any specific storage configuration detail.
  backuplocationGetBackupLocationResponse:
    type: object
    properties:
      backuplocation:
        $ref: '#/definitions/backuplocationBackupLocation'
        description: BackupLocation returned.
    description: Response from getting a BackupLocation.
  backuplocationListBackupLocationsResponse:
    type: object
    properties:
      backuplocations:
        type: array
        items:
          $ref: '#/definitions/backuplocationBackupLocation'
        description: List of backuplocations.
    description: Response from listing BackupLocations.
  backuplocationPatchBackupLocationRequest:
    type: object
    properties:
      backuplocation:
        $ref: '#/definitions/backuplocationBackupLocation'
        description: Patch BackupLocation.
    description: Request to patch a BackupLocation.
  backuplocationPatchBackupLocationResponse:
    type: object
    properties:
      backuplocation:
        $ref: '#/definitions/backuplocationBackupLocation'
        description: BackupLocation to patch.
    description: Response from patching a BackupLocation.
  backuplocationProviderSpecificStorageConfig:
    type: object
    properties:
      s3_config:
        $ref: '#/definitions/backuplocationS3StorageConfiguration'
        description: S3 and S3-compatible config.
      azure_config:
        $ref: '#/definitions/backuplocationAzureStorageConfiguration'
        description: Azure specific config.
      gcp_config:
        $ref: '#/definitions/backuplocationGCPStorageConfiguration'
        description: GCP specific config.
    description: >-
      Provider specific configuration for backup location
      (https://github.com/heptio/velero/blob/master/docs/api-types/backupstoragelocation.md).
  backuplocationS3StorageConfiguration:
    type: object
    properties:
      s3_force_path_style:
        type: boolean
        format: boolean
        description: >-
          A flag for whether to force path style URLs for S3 objects. It is
          defaul to false and set it to true when

          using local storage service like Minio.
      s3_url:
        type: string
        description: The service endpoint for non-AWS S3 storage solution.
      public_url:
        type: string
        description: >-
          The service endpoint used for generating download URLs. This field is
          primarily for local storage services like Minio.
      kms_key_id:
        type: string
        description: >-
          An AWS KMS key id or alias to enable encryption of the backups stored
          in S3. Only works with AWS S3 and may

          require explicitly granting key usage rights.
      signature_version:
        type: string
        description: >-
          Version of the signature algorithm used to create signed URLs that are
          used to download backups or fetch logs.

          Possible versions are "1" and "4". Usually the default version 4 is
          correct, but some S3-compatible providers

          like Quobyte only support version 1.
    description: AWS S3 or other S3-compatible storage configuration details.
  backuplocationSearchScope:
    type: object
    properties:
      group:
        type: string
        description: Scope search to `group`; supports globbing; default (*).
      org_id:
        type: string
        description: Scope search to `org_id`; supports globbing; default (*).
      account:
        type: string
        description: Scope search to `account`; supports globbing; default (*).
      name:
        type: string
        description: Scope search to `name`; supports globbing; default (*).
    description: 'Scope to search by, any fields left empty will be considered all (*).'
  backuplocationUpdateBackupLocationRequest:
    type: object
    properties:
      backuplocation:
        $ref: '#/definitions/backuplocationBackupLocation'
        description: Update BackupLocation.
    description: Request to update (overwrite) a BackupLocation.
  backuplocationUpdateBackupLocationResponse:
    type: object
    properties:
      backuplocation:
        $ref: '#/definitions/backuplocationBackupLocation'
        description: BackupLocation updated.
    description: Response from updating a BackupLocation.
  backuplocationWatchBackupLocationsResponse:
    type: object
    properties:
      backuplocation:
        $ref: '#/definitions/backuplocationBackupLocation'
        description: BackupLocation event.
      type:
        $ref: '#/definitions/WatchBackupLocationsResponseEventType'
        description: Type of event.
    description: Streamed response from watching BackupLocations.
  metaObjectMeta:
    type: object
    properties:
      group:
        type: string
        description: >-
          Group this resource belongs to, if none is given the group is
          `default`.
      labels:
        type: object
        additionalProperties:
          type: string
        description: Arbitrary labels attached to the object.
      uid:
        type: string
        description: UID for the object.
      resource_version:
        type: string
        description: 'Version of the resource, increments on changes.'
      creation_time:
        type: string
        format: date-time
        description: Creation time of the object.
      update_time:
        type: string
        format: date-time
        description: Update time of the object.
      description:
        type: string
        description: Description of the resource.
      annotations:
        type: object
        additionalProperties:
          type: string
        description: >-
          Annotations for the object. Annotations hold system level imformation
          provisioned by controllers.
    description: Holds general shared object metadatas.
  metaTypeMeta:
    type: object
    properties:
      kind:
        type: string
        description: Kind of the type.
      version:
        type: string
        description: Version of the type.
      package:
        type: string
        description: Package of the type.
    description: Holds general type metadatas.
  optionsOffsetPaginationOptions:
    type: object
    properties:
      offset:
        type: string
        format: int64
        description: Offset at which to start returning records.
      size:
        type: string
        format: int64
        description: Number of records to return.
    description: Options to paginate a response using offsets.
  protobufAny:
    type: object
    properties:
      type_url:
        type: string
      value:
        type: string
        format: byte
  runtimeStreamError:
    type: object
    properties:
      grpc_code:
        type: integer
        format: int32
      http_code:
        type: integer
        format: int32
      message:
        type: string
      http_status:
        type: string
      details:
        type: array
        items:
          $ref: '#/definitions/protobufAny'
  statusResourceStatus:
    type: object
    properties:
      state:
        $ref: '#/definitions/ResourceStatusState'
        description: State of a resource.
    description: Status of a resource.
  WatchSnapshotLocationsResponseEventType:
    type: string
    enum:
      - CREATE
      - UPDATE
      - DELETE
    default: CREATE
    description: |-
      Possible types of events.

       - CREATE: Create event sent.
       - UPDATE: Update event sent.
       - DELETE: Delete event sent.
  snapshotlocationAWSSnapshotConfiguration:
    type: object
    properties:
      region:
        type: string
        description: The region of the volume snapshot.
    description: AWS specific volume snapshot configuration details.
  snapshotlocationAzureSnapshotConfiguration:
    type: object
    properties:
      resource_group:
        type: string
        description: >-
          The name of the resource group where volume snapshots should be
          stored, if different from the cluster's

          resource group.
      api_timeout:
        type: string
        description: The timeout for Azure API request to complete.
    description: Azure specific volume snapshot configuration details.
  snapshotlocationCreateSnapshotLocationRequest:
    type: object
    properties:
      snapshotlocation:
        $ref: '#/definitions/snapshotlocationSnapshotLocation'
        description: SnapshotLocation to create.
    description: Request to create a SnapshotLocation.
  snapshotlocationCreateSnapshotLocationResponse:
    type: object
    properties:
      snapshotlocation:
        $ref: '#/definitions/snapshotlocationSnapshotLocation'
        description: SnapshotLocation created.
    description: Response from creating a SnapshotLocation.
  snapshotlocationCustomSnapshotConfiguration:
    type: object
    properties:
      config:
        type: object
        additionalProperties:
          type: string
        description: The configuration map for any volume provider.
    description: Custom volume snapshot configuration details.
  snapshotlocationDeleteSnapshotLocationResponse:
    type: object
    properties:
      message:
        type: string
        description: Message regarding deletion.
    description: Response from deleting SnapshotLocation.
  snapshotlocationFullName:
    type: object
    properties:
      org_id:
        type: string
        description: ID of Organization.
      account:
        type: string
        description: >-
          The reference to the provider account where the volume snapshot
          location was created.
      name:
        type: string
        description: Name of the Snapshot Location.
    description: |-
      Full name of the resource. This includes the object name along
      with any parents or further identifiers.
  snapshotlocationGCPSnapshotConfiguration:
    type: object
    properties:
      snapshot_location:
        type: string
        description: >-
          The location where volume snapshot will be stored
          (https://cloud.google.com/storage/docs/locations#available_locations).

          If not specified, the default location will be used.
          (https://cloud.google.com/compute/docs/disks/create-snapshots#default_location).
      project:
        type: string
        description: >-
          The project ID where snapshots should be stored, if different than the
          project that your IAM account is in.
    description: GCP specific volume snapshot configuration details.
  snapshotlocationGetSnapshotLocationResponse:
    type: object
    properties:
      snapshotlocation:
        $ref: '#/definitions/snapshotlocationSnapshotLocation'
        description: SnapshotLocation returned.
    description: Response from getting a SnapshotLocation.
  snapshotlocationListSnapshotLocationsResponse:
    type: object
    properties:
      snapshotlocations:
        type: array
        items:
          $ref: '#/definitions/snapshotlocationSnapshotLocation'
        description: List of snapshotlocations.
    description: Response from listing SnapshotLocations.
  snapshotlocationPatchSnapshotLocationRequest:
    type: object
    properties:
      snapshotlocation:
        $ref: '#/definitions/snapshotlocationSnapshotLocation'
        description: Patch SnapshotLocation.
    description: Request to patch a SnapshotLocation.
  snapshotlocationPatchSnapshotLocationResponse:
    type: object
    properties:
      snapshotlocation:
        $ref: '#/definitions/snapshotlocationSnapshotLocation'
        description: SnapshotLocation to patch.
    description: Response from patching a SnapshotLocation.
  snapshotlocationProviderSpecificSnapshotConfig:
    type: object
    properties:
      aws_config:
        $ref: '#/definitions/snapshotlocationAWSSnapshotConfiguration'
        description: AWS specific snapshot config.
      azure_config:
        $ref: '#/definitions/snapshotlocationAzureSnapshotConfiguration'
        description: Azure specific snapshot config.
      gcp_config:
        $ref: '#/definitions/snapshotlocationGCPSnapshotConfiguration'
        description: GCP specific snapshot config.
      cust_config:
        $ref: '#/definitions/snapshotlocationCustomSnapshotConfiguration'
        description: The configuration for custom provider.
    description: >-
      Provider specific configuration for volume snapshot location
      (https://github.com/heptio/velero/blob/master/docs/api-types/volumesnapshotlocation.md).
  snapshotlocationSearchScope:
    type: object
    properties:
      group:
        type: string
        description: Scope search to `group`; supports globbing; default (*).
      org_id:
        type: string
        description: Scope search to `org_id`; supports globbing; default (*).
      account:
        type: string
        description: Scope search to `account`; supports globbing; default (*).
      name:
        type: string
        description: Scope search to `name`; supports globbing; default (*).
    description: 'Scope to search by, any fields left empty will be considered all (*).'
  snapshotlocationSnapshotLocation:
    type: object
    properties:
      type_meta:
        $ref: '#/definitions/metaTypeMeta'
        description: Metadata describing the type of the resource.
      full_name:
        $ref: '#/definitions/snapshotlocationFullName'
        description: Full name for the SnapshotLocation.
      object_meta:
        $ref: '#/definitions/metaObjectMeta'
        description: Metadata for the snapshot location object.
      spec:
        $ref: '#/definitions/snapshotlocationSnapshotLocationSpec'
        description: Spec for the snapshot location.
      status:
        $ref: '#/definitions/snapshotlocationSnapshotLocationStatus'
        description: Status of the snapshot location.
    description: >-
      SnapshotLocation resource is used for platform operator to determine the
      volume snapshot providers to use.
  snapshotlocationSnapshotLocationSpec:
    type: object
    properties:
      provider:
        type: string
        description: >-
          The name for whichever cloud provider will be used to actually store
          the volume, such as: aws, azure and gcp.
      config:
        $ref: '#/definitions/snapshotlocationProviderSpecificSnapshotConfig'
        description: Provider-specific configuration fields.
      secret_name:
        type: string
        description: The name of secret to be used to access the bucket.
    description: The snapshot location spec.
  snapshotlocationSnapshotLocationStatus:
    type: object
    properties:
      status:
        $ref: '#/definitions/statusResourceStatus'
        description: Common statuses.
    description: Status of the snapshot location resource.
  snapshotlocationUpdateSnapshotLocationRequest:
    type: object
    properties:
      snapshotlocation:
        $ref: '#/definitions/snapshotlocationSnapshotLocation'
        description: Update SnapshotLocation.
    description: Request to update (overwrite) a SnapshotLocation.
  snapshotlocationUpdateSnapshotLocationResponse:
    type: object
    properties:
      snapshotlocation:
        $ref: '#/definitions/snapshotlocationSnapshotLocation'
        description: SnapshotLocation updated.
    description: Response from updating a SnapshotLocation.
  snapshotlocationWatchSnapshotLocationsResponse:
    type: object
    properties:
      snapshotlocation:
        $ref: '#/definitions/snapshotlocationSnapshotLocation'
        description: SnapshotLocation event.
      type:
        $ref: '#/definitions/WatchSnapshotLocationsResponseEventType'
        description: Type of event.
    description: Streamed response from watching SnapshotLocations.
  WatchBrmsResponseEventType:
    type: string
    enum:
      - CREATE
      - UPDATE
      - DELETE
    default: CREATE
    description: |-
      Possible types of events.

       - CREATE: Create event sent.
       - UPDATE: Update event sent.
       - DELETE: Delete event sent.
  brmBrm:
    type: object
    properties:
      type_meta:
        $ref: '#/definitions/metaTypeMeta'
        description: Metadata describing the type of the resource.
      full_name:
        $ref: '#/definitions/brmFullName'
        description: Full name for the BRM.
      object_meta:
        $ref: '#/definitions/metaObjectMeta'
        description: Metadata for the BRM object.
      spec:
        $ref: '#/definitions/brmBrmSpec'
        description: Spec field for BRM.
      status:
        $ref: '#/definitions/brmBrmStatus'
        description: Status field.
    description: >-
      BRM (Backup Restore Migration) resource is used for configuring backup
      restore migration solution on customer cluster.
  brmBrmSpec:
    type: object
    properties:
      use_restic:
        type: boolean
        format: boolean
        description: >-
          A flag to indicate whether to use restic server
          (https://github.com/restic/restic).
    description: >-
      The spec collects all the options for installing backup and restore
      solution into a Kubernetes cluster.
  brmBrmStatus:
    type: object
    properties:
      status:
        $ref: '#/definitions/statusResourceStatus'
        description: Common statuses.
      namespace:
        type: string
        description: The namespace is used to install backup solution.
      version:
        type: string
        description: The version information of backup solution.
    description: Status of the BRM configure resource.
  brmCreateBrmRequest:
    type: object
    properties:
      brm:
        $ref: '#/definitions/brmBrm'
        description: Brm to create.
    description: Request to create a Brm.
  brmCreateBrmResponse:
    type: object
    properties:
      brm:
        $ref: '#/definitions/brmBrm'
        description: Brm created.
    description: Response from creating a Brm.
  brmDeleteBrmResponse:
    type: object
    properties:
      message:
        type: string
        description: Message regarding deletion.
    description: Response from deleting Brm.
  brmFullName:
    type: object
    properties:
      org_id:
        type: string
        description: ID of Organization.
      location:
        type: string
        description: Location of parent Cluster.
      cluster_name:
        type: string
        description: Name of parent Cluster.
      name:
        type: string
        description: Name of this BRM.
    description: |-
      Full name of the namespace. This includes the object name along
      with any parents or further identifiers.
  brmGetBrmResponse:
    type: object
    properties:
      brm:
        $ref: '#/definitions/brmBrm'
        description: Brm returned.
    description: Response from getting a Brm.
  brmListBrmsResponse:
    type: object
    properties:
      brms:
        type: array
        items:
          $ref: '#/definitions/brmBrm'
        description: List of brms.
    description: Response from listing Brms.
  brmPatchBrmRequest:
    type: object
    properties:
      brm:
        $ref: '#/definitions/brmBrm'
        description: Patch Brm.
    description: Request to patch a Brm.
  brmPatchBrmResponse:
    type: object
    properties:
      brm:
        $ref: '#/definitions/brmBrm'
        description: Brm to patch.
    description: Response from patching a Brm.
  brmSearchScope:
    type: object
    properties:
      group:
        type: string
        description: Scope search to `group`; supports globbing; default (*).
      org_id:
        type: string
        description: Scope search to `org_id`; supports globbing; default (*).
      location:
        type: string
        description: Scope search to `location`; supports globbing; default (*).
      cluster_name:
        type: string
        description: Scope search to `cluster_name`; supports globbing; default (*).
      name:
        type: string
        description: Scope search to `name`; supports globbing; default (*).
    description: 'Scope to search by, any fields left empty will be considered all (*).'
  brmUpdateBrmRequest:
    type: object
    properties:
      brm:
        $ref: '#/definitions/brmBrm'
        description: Update Brm.
    description: Request to update (overwrite) a Brm.
  brmUpdateBrmResponse:
    type: object
    properties:
      brm:
        $ref: '#/definitions/brmBrm'
        description: Brm updated.
    description: Response from updating a Brm.
  brmWatchBrmsResponse:
    type: object
    properties:
      brm:
        $ref: '#/definitions/brmBrm'
        description: Brm event.
      type:
        $ref: '#/definitions/WatchBrmsResponseEventType'
        description: Type of event.
    description: Streamed response from watching Brms.
  BackupStatusBackupPhase:
    type: string
    enum:
      - NEW
      - FAILEDVALIDATION
      - INPROGRESS
      - COMPLETED
      - FAILED
      - DELETING
    default: NEW
    description: |-
      The phase for the current backup.

       - NEW: The phase when backup has been created but not yet processed.
       - FAILEDVALIDATION: The phase when backup has failed the controller's validations and therefore will not run.
       - INPROGRESS: The phase when backup is currently executing.
       - COMPLETED: The phase when backup has run successfully without errors.
       - FAILED: The phase when backup ran but encountered an error that prevented it from completing successfully.
       - DELETING: The phase when backup and all its associated data are being deleted.
  ExecHookHookErrorMode:
    type: string
    enum:
      - CONTINUE
      - FAIL
    default: CONTINUE
    description: >-
      The predefined behavior when backend backup solution encounters an error
      executing this hook.

       - CONTINUE: An error from a hook is acceptable, and the backup can proceed.
       - FAIL: An error from a hook is problematic, and the backup should be in error.
  WatchBackupsResponseEventType:
    type: string
    enum:
      - CREATE
      - UPDATE
      - DELETE
    default: CREATE
    description: |-
      Possible types of events.

       - CREATE: Create event sent.
       - UPDATE: Update event sent.
       - DELETE: Delete event sent.
  backupBackup:
    type: object
    properties:
      type_meta:
        $ref: '#/definitions/commonmetaTypeMeta'
        description: Metadata describing the type of the resource.
      full_name:
        $ref: '#/definitions/backupFullName'
        description: Full name for the Backup Config.
      object_meta:
        $ref: '#/definitions/commonmetaObjectMeta'
        description: Metadata for the backup object.
      spec:
        $ref: '#/definitions/backupBackupSpec'
        description: Spec for the backup.
      status:
        $ref: '#/definitions/backupBackupStatus'
        description: Status of the backup.
    description: >-
      Backup resource represents the Kubernetes cluster state related to backup
      (API objects and associated volume state).
  backupBackupHooks:
    type: object
    properties:
      resources:
        type: array
        items:
          $ref: '#/definitions/backupBackupResourceHookSpec'
        description: >-
          Hooks that should be executed when backing up individual instances of
          a resource.
    description: >-
      The structure contains custom behaviors that should be executed at
      different phases of the backup.
  backupBackupResourceHook:
    type: object
    properties:
      exec:
        $ref: '#/definitions/backupExecHook'
        description: An execution hook.
    description: A hook defined for a resource backup.
  backupBackupResourceHookSpec:
    type: object
    properties:
      name:
        type: string
        description: The name of the hook.
      included_namespaces:
        type: array
        items:
          type: string
        description: >-
          The namespace to be included for applying this hook. If empty, all
          namespaces are included.
      excluded_namespaces:
        type: array
        items:
          type: string
        description: The namespaces to be excluded in the applying this hook.
      included_resources:
        type: array
        items:
          type: string
        description: >-
          The name list for the resources to be included for applying this hook.
          If empty, all resources are included.
      excluded_resources:
        type: array
        items:
          type: string
        description: The name list for the resources to be excluded in appling this hook.
      label_selector:
        $ref: '#/definitions/v1LabelSelector'
        description: >-
          The label selector to selectively adding adding individual objects to
          apply this hook. If empty, all

          objects are included. Optional.
      pre_hooks:
        type: array
        items:
          $ref: '#/definitions/backupBackupResourceHook'
        description: >-
          A list of BackupResourceHooks to execute prior to storing the item in
          the backup.

          These are executed before any "additional items" from item actions are
          processed.
      post_hooks:
        type: array
        items:
          $ref: '#/definitions/backupBackupResourceHook'
        description: >-
          A list of BackupResourceHooks to execute after storing the item in the
          backup.

          These are executed after all "additional items" from item actions are
          processed.
    description: >-
      The structure defines one or more BackupResourceHooks that should be
      executed based on

      the rules defined for namespaces, resources, and label selector.
  backupBackupSpec:
    type: object
    properties:
      included_namespaces:
        type: array
        items:
          type: string
        description: >-
          The namespace to be included for backup from. If empty, all namespaces
          are included.
      excluded_namespaces:
        type: array
        items:
          type: string
        description: The namespaces to be excluded in the backup.
      included_resources:
        type: array
        items:
          type: string
        description: >-
          The name list for the resources to be included into backup. If empty,
          all resources are included.
      excluded_resources:
        type: array
        items:
          type: string
        description: The name list for the resources to be excluded in backup.
      label_selector:
        $ref: '#/definitions/v1LabelSelector'
        description: >-
          The label selector to selectively adding individual objects to the
          backup. If empty

          or nil, all objects are included. Optional.
      snapshot_volumes:
        type: boolean
        format: boolean
        description: >-
          A flag specifies whether to take cloud snapshots of any PV's
          referenced in the set of objects

          included in the Backup.
      ttl:
        type: string
        description: The backup retention period.
      include_cluster_resources:
        type: boolean
        format: boolean
        description: >-
          A flag specifies whether cluster-scoped resources should be included
          for consideration in the backup.
      hooks:
        $ref: '#/definitions/backupBackupHooks'
        description: Hooks to be executed at different phases of the backup.
      storage_location:
        type: string
        description: The name of a BackupStorageLocation where the backup should be stored.
      volume_snapshot_locations:
        type: array
        items:
          type: string
        description: >-
          A list containing names of VolumeSnapshotLocations associated with
          this backup.
    description: The backup spec.
  backupBackupStatus:
    type: object
    properties:
      status:
        $ref: '#/definitions/statusResourceStatus'
        description: Common statuses.
      version:
        type: integer
        format: int32
        description: The backup format version.
      expiration:
        type: string
        description: The expiration setting to enable this Backup to be garbage-collected.
      phase:
        $ref: '#/definitions/BackupStatusBackupPhase'
        description: The current state of the Backup.
      volume_backups:
        type: array
        items:
          $ref: '#/definitions/backupVolumeBackupInfo'
        description: >-
          A map of PersistentVolume names to information about the backed-up
          volume in the cloud provider API.
      validation_errors:
        type: array
        items:
          type: string
        description: A list of all validation errors (if applicable).
      start_timestamp:
        type: string
        format: date-time
        description: The timestamp when a backup was started.
      completion_timestamp:
        type: string
        format: date-time
        description: The timestamp when a backup was completed.
      volume_snapshots_attempted:
        type: integer
        format: int32
        description: The total number of attempted volume snapshots for this backup.
      volume_snapshots_completed:
        type: integer
        format: int32
        description: >-
          The total number of successfully completed volume snapshots for this
          backup.
    description: Status of the backup resource.
  backupCreateBackupRequest:
    type: object
    properties:
      backup:
        $ref: '#/definitions/backupBackup'
        description: Backup to create.
    description: Request to create a Backup.
  backupCreateBackupResponse:
    type: object
    properties:
      backup:
        $ref: '#/definitions/backupBackup'
        description: Backup created.
    description: Response from creating a Backup.
  backupDeleteBackupResponse:
    type: object
    properties:
      message:
        type: string
        description: Message regarding deletion.
    description: Response from deleting Backup.
  backupExecHook:
    type: object
    properties:
      container:
        type: string
        description: >-
          The container in the pod where the command should be executed. If not
          specified,

          the pod's first container is used.
      command:
        type: array
        items:
          type: string
        description: The command and arguments to execute.
      on_error:
        $ref: '#/definitions/ExecHookHookErrorMode'
        description: >-
          The predefined behavior when backend backup solution encounters an
          error executing this hook.
      timeout:
        type: string
        description: >-
          The maximum amount of time backend backup solution should wait for the
          hook to complete.
    description: >-
      A hook that uses the pod exec API to execute a command in a container in a
      pod.
  backupFullName:
    type: object
    properties:
      org_id:
        type: string
        description: ID of Organization.
      location:
        type: string
        description: Location of parent Cluster.
      cluster_name:
        type: string
        description: Name of parent Cluster.
      brm_name:
        type: string
        description: Name of backup restore and migration tool.
      name:
        type: string
        description: Name of this Backup.
    description: |-
      Full name of the namespace. This includes the object name along
      with any parents or further identifiers.
  backupGetBackupResponse:
    type: object
    properties:
      backup:
        $ref: '#/definitions/backupBackup'
        description: Backup returned.
    description: Response from getting a Backup.
  backupListBackupsResponse:
    type: object
    properties:
      backups:
        type: array
        items:
          $ref: '#/definitions/backupBackup'
        description: List of backups.
    description: Response from listing Backups.
  backupPatchBackupRequest:
    type: object
    properties:
      backup:
        $ref: '#/definitions/backupBackup'
        description: Patch Backup.
    description: Request to patch a Backup.
  backupPatchBackupResponse:
    type: object
    properties:
      backup:
        $ref: '#/definitions/backupBackup'
        description: Backup to patch.
    description: Response from patching a Backup.
  backupSearchScope:
    type: object
    properties:
      group:
        type: string
        description: Scope search to `group`; supports globbing; default (*).
      org_id:
        type: string
        description: Scope search to `org_id`; supports globbing; default (*).
      location:
        type: string
        description: Scope search to `location`; supports globbing; default (*).
      cluster_name:
        type: string
        description: Scope search to `cluster_name`; supports globbing; default (*).
      brm_name:
        type: string
        description: Scope search to `brm_name`; supports globbing; default (*).
      name:
        type: string
        description: Scope search to `name`; supports globbing; default (*).
    description: 'Scope to search by, any fields left empty will be considered all (*).'
  backupUpdateBackupRequest:
    type: object
    properties:
      backup:
        $ref: '#/definitions/backupBackup'
        description: Update Backup.
    description: Request to update (overwrite) a Backup.
  backupUpdateBackupResponse:
    type: object
    properties:
      backup:
        $ref: '#/definitions/backupBackup'
        description: Backup updated.
    description: Response from updating a Backup.
  backupVolumeBackupInfo:
    type: object
    properties:
      snapshot_id:
        type: string
        description: The ID of the snapshot taken in the cloud provider API of this volume.
      type:
        type: string
        description: The type of the disk/volume in the cloud provider API.
      availability_zone:
        type: string
        description: >-
          The availability zone value in the cloud provider where the volume is
          provisioned.
      iops:
        type: string
        format: int64
        description: The provisioned IOPS for the disk/volume in the cloud provider API.
    description: >-
      The information about a PersistentVolume at backup time to be able to
      restore it later.
  backupWatchBackupsResponse:
    type: object
    properties:
      backup:
        $ref: '#/definitions/backupBackup'
        description: Backup event.
      type:
        $ref: '#/definitions/WatchBackupsResponseEventType'
        description: Type of event.
    description: Streamed response from watching Backups.
  commonmetaObjectMeta:
    type: object
    properties:
      group:
        type: string
        description: >-
          Group this resource belongs to, if none is given the group is
          `default`.
      labels:
        type: object
        additionalProperties:
          type: string
        description: Arbitrary labels attached to the object.
      uid:
        type: string
        description: UID for the object.
      resource_version:
        type: string
        description: 'Version of the resource, increments on changes.'
      creation_time:
        type: string
        format: date-time
        description: Creation time of the object.
      update_time:
        type: string
        format: date-time
        description: Update time of the object.
      description:
        type: string
        description: Description of the resource.
      annotations:
        type: object
        additionalProperties:
          type: string
        description: >-
          Annotations for the object. Annotations hold system level imformation
          provisioned by controllers.
    description: Holds general shared object metadatas.
  commonmetaTypeMeta:
    type: object
    properties:
      kind:
        type: string
        description: Kind of the type.
      version:
        type: string
        description: Version of the type.
      package:
        type: string
        description: Package of the type.
    description: Holds general type metadatas.
  v1LabelSelector:
    type: object
    properties:
      matchLabels:
        type: object
        additionalProperties:
          type: string
        title: >-
          matchLabels is a map of {key,value} pairs. A single {key,value} in the
          matchLabels

          map is equivalent to an element of matchExpressions, whose key field
          is "key", the

          operator is "In", and the values array contains only "value". The
          requirements are ANDed.

          +optional
      matchExpressions:
        type: array
        items:
          $ref: '#/definitions/v1LabelSelectorRequirement'
        title: >-
          matchExpressions is a list of label selector requirements. The
          requirements are ANDed.

          +optional
    description: >-
      A label selector is a label query over a set of resources. The result of
      matchLabels and

      matchExpressions are ANDed. An empty label selector matches all objects. A
      null

      label selector matches no objects.
  v1LabelSelectorRequirement:
    type: object
    properties:
      key:
        type: string
        title: |-
          key is the label key that the selector applies to.
          +patchMergeKey=key
          +patchStrategy=merge
      operator:
        type: string
        description: |-
          operator represents a key's relationship to a set of values.
          Valid operators are In, NotIn, Exists and DoesNotExist.
      values:
        type: array
        items:
          type: string
        title: >-
          values is an array of string values. If the operator is In or NotIn,

          the values array must be non-empty. If the operator is Exists or
          DoesNotExist,

          the values array must be empty. This array is replaced during a
          strategic

          merge patch.

          +optional
    description: >-
      A label selector requirement is a selector that contains values, a key,
      and an operator that

      relates the key and values.
  BackupLocationStatusBackupStorageLocationAccessMode:
    type: string
    enum:
      - READONLY
      - READWRITE
    default: READONLY
    description: |-
      The permissions for a BackupStorageLocation.

       - READONLY: The read only access.
       - READWRITE: Read and write access.
  BackupLocationStatusBackupStorageLocationPhase:
    type: string
    enum:
      - AVAILABLE
      - UNAVAILABLE
    default: AVAILABLE
    description: |-
      The lifecycle phases of backup storage location.

       - AVAILABLE: The location is available to read and write from.
       - UNAVAILABLE: The location is unavailable for read and write from.
  WatchClusterBackupLocationsResponseEventType:
    type: string
    enum:
      - CREATE
      - UPDATE
      - DELETE
    default: CREATE
    description: |-
      Possible types of events.

       - CREATE: Create event sent.
       - UPDATE: Update event sent.
       - DELETE: Delete event sent.
  brmclusterbackuplocationBackupLocationSpec:
    type: object
    properties:
      provider:
        type: string
        description: >-
          The provider of the backup storage in the format as: aws:accountID,
          azure:accountID, etc.
      config:
        $ref: '#/definitions/backuplocationProviderSpecificStorageConfig'
        description: Provider-specific configuration fields.
      bucket:
        type: string
        description: The bucket to use for object storage.
      region:
        type: string
        description: The region of the bucket origin. Optional.
      secret_name:
        type: string
        description: The name of secret to be used to access the bucket.
    description: The backup location spec.
  brmclusterbackuplocationBackupLocationStatus:
    type: object
    properties:
      status:
        $ref: '#/definitions/statusResourceStatus'
        description: Common statuses.
      phase:
        $ref: '#/definitions/BackupLocationStatusBackupStorageLocationPhase'
        description: The current state of the backup location.
      access_mode:
        $ref: '#/definitions/BackupLocationStatusBackupStorageLocationAccessMode'
        description: Permission for the backup location.
      last_sync_revision:
        type: string
        description: >-
          The SHA value inside the file `<bucket>/metadata/revision`. Updating
          the SHA in that file will force

          a sync to happen sooner.
      last_sync_timestamp:
        type: string
        format: date-time
        description: The timestamp when last sync happened.
    description: Status of the backup location resource.
  brmclusterbackuplocationFullName:
    type: object
    properties:
      org_id:
        type: string
        description: ID of Organization.
      location:
        type: string
        description: Location of parent Cluster.
      cluster_name:
        type: string
        description: Name of parent Cluster.
      brm_name:
        type: string
        description: Name of backup restore and migration tool.
      name:
        type: string
        description: Name of this Backup Location.
    description: |-
      Full name of the namespace. This includes the object name along
      with any parents or further identifiers.
  clusterbackuplocationClusterBackupLocation:
    type: object
    properties:
      type_meta:
        $ref: '#/definitions/metaTypeMeta'
        description: Metadata describing the type of the resource.
      full_name:
        $ref: '#/definitions/brmclusterbackuplocationFullName'
        description: Full name for the BackupLocation.
      object_meta:
        $ref: '#/definitions/metaObjectMeta'
        description: Metadata for the backup location object.
      spec:
        $ref: '#/definitions/brmclusterbackuplocationBackupLocationSpec'
        description: Spec for the backup location.
      status:
        $ref: '#/definitions/brmclusterbackuplocationBackupLocationStatus'
        description: Status of the backup location.
    description: >-
      ClusterBackupLocation resource represents the backup location assigned to
      a cluster.
  clusterbackuplocationCreateClusterBackupLocationRequest:
    type: object
    properties:
      clusterbackuplocation:
        $ref: '#/definitions/clusterbackuplocationClusterBackupLocation'
        description: ClusterBackupLocation to create.
    description: Request to create a ClusterBackupLocation.
  clusterbackuplocationCreateClusterBackupLocationResponse:
    type: object
    properties:
      clusterbackuplocation:
        $ref: '#/definitions/clusterbackuplocationClusterBackupLocation'
        description: ClusterBackupLocation created.
    description: Response from creating a ClusterBackupLocation.
  clusterbackuplocationDeleteClusterBackupLocationResponse:
    type: object
    properties:
      message:
        type: string
        description: Message regarding deletion.
    description: Response from deleting ClusterBackupLocation.
  clusterbackuplocationGetClusterBackupLocationResponse:
    type: object
    properties:
      clusterbackuplocation:
        $ref: '#/definitions/clusterbackuplocationClusterBackupLocation'
        description: ClusterBackupLocation returned.
    description: Response from getting a ClusterBackupLocation.
  clusterbackuplocationListClusterBackupLocationsResponse:
    type: object
    properties:
      clusterbackuplocations:
        type: array
        items:
          $ref: '#/definitions/clusterbackuplocationClusterBackupLocation'
        description: List of clusterbackuplocations.
    description: Response from listing ClusterBackupLocations.
  clusterbackuplocationPatchClusterBackupLocationRequest:
    type: object
    properties:
      clusterbackuplocation:
        $ref: '#/definitions/clusterbackuplocationClusterBackupLocation'
        description: Patch ClusterBackupLocation.
    description: Request to patch a ClusterBackupLocation.
  clusterbackuplocationPatchClusterBackupLocationResponse:
    type: object
    properties:
      clusterbackuplocation:
        $ref: '#/definitions/clusterbackuplocationClusterBackupLocation'
        description: ClusterBackupLocation to patch.
    description: Response from patching a ClusterBackupLocation.
  clusterbackuplocationSearchScope:
    type: object
    properties:
      group:
        type: string
        description: Scope search to `group`; supports globbing; default (*).
      org_id:
        type: string
        description: Scope search to `org_id`; supports globbing; default (*).
      location:
        type: string
        description: Scope search to `location`; supports globbing; default (*).
      cluster_name:
        type: string
        description: Scope search to `cluster_name`; supports globbing; default (*).
      brm_name:
        type: string
        description: Scope search to `brm_name`; supports globbing; default (*).
      name:
        type: string
        description: Scope search to `name`; supports globbing; default (*).
    description: 'Scope to search by, any fields left empty will be considered all (*).'
  clusterbackuplocationUpdateClusterBackupLocationRequest:
    type: object
    properties:
      clusterbackuplocation:
        $ref: '#/definitions/clusterbackuplocationClusterBackupLocation'
        description: Update ClusterBackupLocation.
    description: Request to update (overwrite) a ClusterBackupLocation.
  clusterbackuplocationUpdateClusterBackupLocationResponse:
    type: object
    properties:
      clusterbackuplocation:
        $ref: '#/definitions/clusterbackuplocationClusterBackupLocation'
        description: ClusterBackupLocation updated.
    description: Response from updating a ClusterBackupLocation.
  clusterbackuplocationWatchClusterBackupLocationsResponse:
    type: object
    properties:
      clusterbackuplocation:
        $ref: '#/definitions/clusterbackuplocationClusterBackupLocation'
        description: ClusterBackupLocation event.
      type:
        $ref: '#/definitions/WatchClusterBackupLocationsResponseEventType'
        description: Type of event.
    description: Streamed response from watching ClusterBackupLocations.
  RestoreStatusRestorePhase:
    type: string
    enum:
      - NEW
      - FAILEDVALIDATION
      - INPROGRESS
      - COMPLETED
      - FAILED
    default: NEW
    description: |-
      The lifecycle phases of restore.

       - NEW: The restore has been created but not yet processed.
       - FAILEDVALIDATION: The restore has failed the controller's validations and therefore will not run.
       - INPROGRESS: The restore is currently executing.
       - COMPLETED: The restore has finished executing. Any relevant warnings or errors will be captured in the Status.
       - FAILED: The restore was unable to execute. The failing error is recorded in status.FailureReason.
  WatchRestoresResponseEventType:
    type: string
    enum:
      - CREATE
      - UPDATE
      - DELETE
    default: CREATE
    description: |-
      Possible types of events.

       - CREATE: Create event sent.
       - UPDATE: Update event sent.
       - DELETE: Delete event sent.
  restoreCreateRestoreRequest:
    type: object
    properties:
      restore:
        $ref: '#/definitions/restoreRestore'
        description: Restore to create.
    description: Request to create a Restore.
  restoreCreateRestoreResponse:
    type: object
    properties:
      restore:
        $ref: '#/definitions/restoreRestore'
        description: Restore created.
    description: Response from creating a Restore.
  restoreDeleteRestoreResponse:
    type: object
    properties:
      message:
        type: string
        description: Message regarding deletion.
    description: Response from deleting Restore.
  restoreFullName:
    type: object
    properties:
      org_id:
        type: string
        description: ID of Organization.
      location:
        type: string
        description: Location of parent Cluster.
      cluster_name:
        type: string
        description: Name of parent Cluster.
      brm_name:
        type: string
        description: Name of backup restore and migration tool.
      name:
        type: string
        description: Name of this Restore.
    description: |-
      Full name of the namespace. This includes the object name along
      with any parents or further identifiers.
  restoreGetRestoreResponse:
    type: object
    properties:
      restore:
        $ref: '#/definitions/restoreRestore'
        description: Restore returned.
    description: Response from getting a Restore.
  restoreListRestoresResponse:
    type: object
    properties:
      restores:
        type: array
        items:
          $ref: '#/definitions/restoreRestore'
        description: List of restores.
    description: Response from listing Restores.
  restorePatchRestoreRequest:
    type: object
    properties:
      restore:
        $ref: '#/definitions/restoreRestore'
        description: Patch Restore.
    description: Request to patch a Restore.
  restorePatchRestoreResponse:
    type: object
    properties:
      restore:
        $ref: '#/definitions/restoreRestore'
        description: Restore to patch.
    description: Response from patching a Restore.
  restoreRestore:
    type: object
    properties:
      type_meta:
        $ref: '#/definitions/metaTypeMeta'
        description: Metadata describing the type of the resource.
      full_name:
        $ref: '#/definitions/restoreFullName'
        description: Full name for the Config.
      object_meta:
        $ref: '#/definitions/metaObjectMeta'
        description: Metadata for the restore object.
      spec:
        $ref: '#/definitions/restoreRestoreSpec'
        description: Spec for the restore.
      status:
        $ref: '#/definitions/restoreRestoreStatus'
        description: Status of the restore.
    description: >-
      Restore resource represents the application of resources from a backup to
      a target Kubernetes cluster.
  restoreRestoreSpec:
    type: object
    properties:
      backup_name:
        type: string
        description: The name of the backup to restore from.
      schedule_name:
        type: string
        description: >-
          The name of the schedule to restore from. If specified, and BackupName
          is empty, the most recent successful

          backup created from this schedule will be restored.
      included_namespaces:
        type: array
        items:
          type: string
        description: >-
          The list of namespace names to be included for restore. If empty, all
          namespaces are included.
      excluded_namespaces:
        type: array
        items:
          type: string
        description: The list of namespace names to be excluded from restore.
      included_resources:
        type: array
        items:
          type: string
        description: >-
          The list of resource names to be included in the restore. If empty,
          all resources in the backup are included.
      excluded_resources:
        type: array
        items:
          type: string
        description: The list of resource names to be excluded from restore.
      namespace_mapping:
        type: object
        additionalProperties:
          type: string
        description: >-
          A map of source namespace names to target namespace names to restore
          into. Any source namespaces not

          included in the map will be restored into namespaces of the same name.
      label_selector:
        type: string
        description: >-
          A label selector used to selectively restore individual objects from
          the backup. If empty

          or nil, all objects are included. Optional.
      restore_pvs:
        type: boolean
        format: boolean
        description: >-
          A flag specifies whether to restore all included PVs from snapshot
          (via the cloudprovider).
      include_cluster_resources:
        type: boolean
        format: boolean
        description: >-
          A flag specifies whether cluster-scoped resources should be included
          for consideration in the restore.

          Default to true.
    description: The restore spec.
  restoreRestoreStatus:
    type: object
    properties:
      status:
        $ref: '#/definitions/statusResourceStatus'
        description: Common statuses.
      phase:
        $ref: '#/definitions/RestoreStatusRestorePhase'
        description: The current state of the Restore.
      validation_errors:
        type: array
        items:
          type: string
        description: The list all validation errors (if applicable).
      warnings:
        type: integer
        format: int32
        description: >-
          The count of all warning messages that were generated during execution
          of the restore.

          The actual warnings are stored in object storage.
      errors:
        type: integer
        format: int32
        description: >-
          The count of all error messages that were generated during execution
          of the restore.

          The actual errors are stored in object storage.
      failure_reason:
        type: string
        description: An error that caused the entire restore to fail.
    description: Status of the restore resource.
  restoreSearchScope:
    type: object
    properties:
      group:
        type: string
        description: Scope search to `group`; supports globbing; default (*).
      org_id:
        type: string
        description: Scope search to `org_id`; supports globbing; default (*).
      location:
        type: string
        description: Scope search to `location`; supports globbing; default (*).
      cluster_name:
        type: string
        description: Scope search to `cluster_name`; supports globbing; default (*).
      brm_name:
        type: string
        description: Scope search to `brm_name`; supports globbing; default (*).
      name:
        type: string
        description: Scope search to `name`; supports globbing; default (*).
    description: 'Scope to search by, any fields left empty will be considered all (*).'
  restoreUpdateRestoreRequest:
    type: object
    properties:
      restore:
        $ref: '#/definitions/restoreRestore'
        description: Update Restore.
    description: Request to update (overwrite) a Restore.
  restoreUpdateRestoreResponse:
    type: object
    properties:
      restore:
        $ref: '#/definitions/restoreRestore'
        description: Restore updated.
    description: Response from updating a Restore.
  restoreWatchRestoresResponse:
    type: object
    properties:
      restore:
        $ref: '#/definitions/restoreRestore'
        description: Restore event.
      type:
        $ref: '#/definitions/WatchRestoresResponseEventType'
        description: Type of event.
    description: Streamed response from watching Restores.
  ScheduleStatusSchedulePhase:
    type: string
    enum:
      - NEW
      - ENABLED
      - FAILEDVALIDATION
    default: NEW
    description: |-
      The lifecycle phase of a schedule backup.

       - NEW: The schedule has been created but not yet processed.
       - ENABLED: The schedule has been validated and will now be triggering backups according to the schedule spec.
       - FAILEDVALIDATION: The schedule has failed the controller's validations and therefore will not trigger backups.
  WatchSchedulesResponseEventType:
    type: string
    enum:
      - CREATE
      - UPDATE
      - DELETE
    default: CREATE
    description: |-
      Possible types of events.

       - CREATE: Create event sent.
       - UPDATE: Update event sent.
       - DELETE: Delete event sent.
  brmscheduleFullName:
    type: object
    properties:
      org_id:
        type: string
        description: ID of Organization.
      location:
        type: string
        description: Location of parent Cluster.
      cluster_name:
        type: string
        description: Name of parent Cluster.
      brm_name:
        type: string
        description: Name of backup restore and migration tool.
      name:
        type: string
        description: Name of this Schedule.
    description: |-
      Full name of the namespace. This includes the object name along
      with any parents or further identifiers.
  scheduleCreateScheduleRequest:
    type: object
    properties:
      schedule:
        $ref: '#/definitions/scheduleSchedule'
        description: Schedule to create.
    description: Request to create a Schedule.
  scheduleCreateScheduleResponse:
    type: object
    properties:
      schedule:
        $ref: '#/definitions/scheduleSchedule'
        description: Schedule created.
    description: Response from creating a Schedule.
  scheduleDeleteScheduleResponse:
    type: object
    properties:
      message:
        type: string
        description: Message regarding deletion.
    description: Response from deleting Schedule.
  scheduleGetScheduleResponse:
    type: object
    properties:
      schedule:
        $ref: '#/definitions/scheduleSchedule'
        description: Schedule returned.
    description: Response from getting a Schedule.
  scheduleListSchedulesResponse:
    type: object
    properties:
      schedules:
        type: array
        items:
          $ref: '#/definitions/scheduleSchedule'
        description: List of schedules.
    description: Response from listing Schedules.
  schedulePatchScheduleRequest:
    type: object
    properties:
      schedule:
        $ref: '#/definitions/scheduleSchedule'
        description: Patch Schedule.
    description: Request to patch a Schedule.
  schedulePatchScheduleResponse:
    type: object
    properties:
      schedule:
        $ref: '#/definitions/scheduleSchedule'
        description: Schedule to patch.
    description: Response from patching a Schedule.
  scheduleSchedule:
    type: object
    properties:
      type_meta:
        $ref: '#/definitions/commonmetaTypeMeta'
        description: Metadata describing the type of the resource.
      full_name:
        $ref: '#/definitions/brmscheduleFullName'
        description: Full name for the Schedule.
      object_meta:
        $ref: '#/definitions/commonmetaObjectMeta'
        description: Metadata for the restore object.
      spec:
        $ref: '#/definitions/scheduleScheduleSpec'
        description: Spec for the restore.
      status:
        $ref: '#/definitions/scheduleScheduleStatus'
        description: Status of the schedule.
    description: >-
      Schedule resource represents a pre-scheduled or periodic Backup that
      should be run.
  scheduleScheduleSpec:
    type: object
    properties:
      template:
        $ref: '#/definitions/backupBackupSpec'
        description: The definition of the Backup to be run on the provided schedule.
      schedule:
        type: string
        description: A Cron expression defining when to run the Backup.
    description: The schedule spec.
  scheduleScheduleStatus:
    type: object
    properties:
      status:
        $ref: '#/definitions/statusResourceStatus'
        description: Common statuses.
      phase:
        $ref: '#/definitions/ScheduleStatusSchedulePhase'
        description: The current phase of the Schedule.
      last_backup:
        type: string
        format: date-time
        description: The last time a Backup was run for this schedule.
      validation_errors:
        type: array
        items:
          type: string
        description: The list of all validation errors (if applicable).
    description: Status of the schedule resource.
  scheduleSearchScope:
    type: object
    properties:
      group:
        type: string
        description: Scope search to `group`; supports globbing; default (*).
      org_id:
        type: string
        description: Scope search to `org_id`; supports globbing; default (*).
      location:
        type: string
        description: Scope search to `location`; supports globbing; default (*).
      cluster_name:
        type: string
        description: Scope search to `cluster_name`; supports globbing; default (*).
      brm_name:
        type: string
        description: Scope search to `brm_name`; supports globbing; default (*).
      name:
        type: string
        description: Scope search to `name`; supports globbing; default (*).
    description: 'Scope to search by, any fields left empty will be considered all (*).'
  scheduleUpdateScheduleRequest:
    type: object
    properties:
      schedule:
        $ref: '#/definitions/scheduleSchedule'
        description: Update Schedule.
    description: Request to update (overwrite) a Schedule.
  scheduleUpdateScheduleResponse:
    type: object
    properties:
      schedule:
        $ref: '#/definitions/scheduleSchedule'
        description: Schedule updated.
    description: Response from updating a Schedule.
  scheduleWatchSchedulesResponse:
    type: object
    properties:
      schedule:
        $ref: '#/definitions/scheduleSchedule'
        description: Schedule event.
      type:
        $ref: '#/definitions/WatchSchedulesResponseEventType'
        description: Type of event.
    description: Streamed response from watching Schedules.
  SnapshotLocationStatusVolumeSnapshotLocationPhase:
    type: string
    enum:
      - AVAILABLE
      - UNAVAILABLE
    default: AVAILABLE
    description: |-
      The lifecycle phases of snapshot location.

       - AVAILABLE: The location is available to read and write from.
       - UNAVAILABLE: The location is unavailable for read and write from.
  WatchClusterSnapshotLocationsResponseEventType:
    type: string
    enum:
      - CREATE
      - UPDATE
      - DELETE
    default: CREATE
    description: |-
      Possible types of events.

       - CREATE: Create event sent.
       - UPDATE: Update event sent.
       - DELETE: Delete event sent.
  brmclustersnapshotlocationFullName:
    type: object
    properties:
      org_id:
        type: string
        description: ID of Organization.
      location:
        type: string
        description: Location of parent Cluster.
      cluster_name:
        type: string
        description: Name of parent Cluster.
      brm_name:
        type: string
        description: Name of backup restore and migration tool.
      name:
        type: string
        description: Name of this Snapshot location.
    description: |-
      Full name of the namespace. This includes the object name along
      with any parents or further identifiers.
  brmclustersnapshotlocationSnapshotLocationSpec:
    type: object
    properties:
      provider:
        type: string
        description: The provider of the snapshot location.
      config:
        $ref: '#/definitions/snapshotlocationProviderSpecificSnapshotConfig'
        description: Provider-specific configuration fields.
      secret_name:
        type: string
        description: The name of secret to be used to access the bucket.
    description: The snapshot location spec.
  brmclustersnapshotlocationSnapshotLocationStatus:
    type: object
    properties:
      status:
        $ref: '#/definitions/statusResourceStatus'
        description: Common statuses.
      phase:
        $ref: '#/definitions/SnapshotLocationStatusVolumeSnapshotLocationPhase'
        description: The current state of the snapshot location.
    description: Status of the snapshot location resource.
  clustersnapshotlocationClusterSnapshotLocation:
    type: object
    properties:
      type_meta:
        $ref: '#/definitions/metaTypeMeta'
        description: Metadata describing the type of the resource.
      full_name:
        $ref: '#/definitions/brmclustersnapshotlocationFullName'
        description: Full name for the SnapshotLocation.
      object_meta:
        $ref: '#/definitions/metaObjectMeta'
        description: Metadata for the snapshot location object.
      spec:
        $ref: '#/definitions/brmclustersnapshotlocationSnapshotLocationSpec'
        description: Spec for the snapshot location.
      status:
        $ref: '#/definitions/brmclustersnapshotlocationSnapshotLocationStatus'
        description: Status of the snapshot location.
    description: >-
      ClusterSnapshotLocation resource represents the snapshot location assigned
      to a cluster.
  clustersnapshotlocationCreateClusterSnapshotLocationRequest:
    type: object
    properties:
      clustersnapshotlocation:
        $ref: '#/definitions/clustersnapshotlocationClusterSnapshotLocation'
        description: ClusterSnapshotLocation to create.
    description: Request to create a ClusterSnapshotLocation.
  clustersnapshotlocationCreateClusterSnapshotLocationResponse:
    type: object
    properties:
      clustersnapshotlocation:
        $ref: '#/definitions/clustersnapshotlocationClusterSnapshotLocation'
        description: ClusterSnapshotLocation created.
    description: Response from creating a ClusterSnapshotLocation.
  clustersnapshotlocationDeleteClusterSnapshotLocationResponse:
    type: object
    properties:
      message:
        type: string
        description: Message regarding deletion.
    description: Response from deleting ClusterSnapshotLocation.
  clustersnapshotlocationGetClusterSnapshotLocationResponse:
    type: object
    properties:
      clustersnapshotlocation:
        $ref: '#/definitions/clustersnapshotlocationClusterSnapshotLocation'
        description: ClusterSnapshotLocation returned.
    description: Response from getting a ClusterSnapshotLocation.
  clustersnapshotlocationListClusterSnapshotLocationsResponse:
    type: object
    properties:
      clustersnapshotlocations:
        type: array
        items:
          $ref: '#/definitions/clustersnapshotlocationClusterSnapshotLocation'
        description: List of clustersnapshotlocations.
    description: Response from listing ClusterSnapshotLocations.
  clustersnapshotlocationPatchClusterSnapshotLocationRequest:
    type: object
    properties:
      clustersnapshotlocation:
        $ref: '#/definitions/clustersnapshotlocationClusterSnapshotLocation'
        description: Patch ClusterSnapshotLocation.
    description: Request to patch a ClusterSnapshotLocation.
  clustersnapshotlocationPatchClusterSnapshotLocationResponse:
    type: object
    properties:
      clustersnapshotlocation:
        $ref: '#/definitions/clustersnapshotlocationClusterSnapshotLocation'
        description: ClusterSnapshotLocation to patch.
    description: Response from patching a ClusterSnapshotLocation.
  clustersnapshotlocationSearchScope:
    type: object
    properties:
      group:
        type: string
        description: Scope search to `group`; supports globbing; default (*).
      org_id:
        type: string
        description: Scope search to `org_id`; supports globbing; default (*).
      location:
        type: string
        description: Scope search to `location`; supports globbing; default (*).
      cluster_name:
        type: string
        description: Scope search to `cluster_name`; supports globbing; default (*).
      brm_name:
        type: string
        description: Scope search to `brm_name`; supports globbing; default (*).
      name:
        type: string
        description: Scope search to `name`; supports globbing; default (*).
    description: 'Scope to search by, any fields left empty will be considered all (*).'
  clustersnapshotlocationUpdateClusterSnapshotLocationRequest:
    type: object
    properties:
      clustersnapshotlocation:
        $ref: '#/definitions/clustersnapshotlocationClusterSnapshotLocation'
        description: Update ClusterSnapshotLocation.
    description: Request to update (overwrite) a ClusterSnapshotLocation.
  clustersnapshotlocationUpdateClusterSnapshotLocationResponse:
    type: object
    properties:
      clustersnapshotlocation:
        $ref: '#/definitions/clustersnapshotlocationClusterSnapshotLocation'
        description: ClusterSnapshotLocation updated.
    description: Response from updating a ClusterSnapshotLocation.
  clustersnapshotlocationWatchClusterSnapshotLocationsResponse:
    type: object
    properties:
      clustersnapshotlocation:
        $ref: '#/definitions/clustersnapshotlocationClusterSnapshotLocation'
        description: ClusterSnapshotLocation event.
      type:
        $ref: '#/definitions/WatchClusterSnapshotLocationsResponseEventType'
        description: Type of event.
    description: Streamed response from watching ClusterSnapshotLocations.
  healthComponentGroupHealth:
    type: object
    properties:
      status:
        $ref: '#/definitions/statusResourceStatus'
        description: Overall Health status of the component.
      message:
        type: string
        description: Message providing details.
      components_health:
        type: array
        items:
          $ref: '#/definitions/healthComponentHealth'
        description: Health status of the components.
    title: |-
      Number of ComponentHealth objects and
      provides a summary health status for this category of data.
      e.g. multiple etcd instances
  healthComponentHealth:
    type: object
    properties:
      instance:
        type: string
        description: Instance name of a component.
      timestamp:
        type: string
        format: date-time
        description: Timestamp of the record.
      health_status:
        $ref: '#/definitions/statusResourceStatus'
        description: Health status of a component.
      message:
        type: string
        description: Message providing details.
    description: Health data for a component.
  healthFullName:
    type: object
    properties:
      org_id:
        type: string
        description: Org ID of the cluster organization.
      location:
        type: string
        description: Location of the cluster.
      cluster_name:
        type: string
        description: Name of the cluster.
      name:
        type: string
        description: Name of the cluster health.
    description: Scope for the Health.
  healthGetHealthResponse:
    type: object
    properties:
      health:
        $ref: '#/definitions/healthHealth'
        description: Health returned.
    description: Response from getting a Health.
  healthHealth:
    type: object
    properties:
      type_meta:
        $ref: '#/definitions/metaTypeMeta'
        description: Metadata describing the type of the resource.
      full_name:
        $ref: '#/definitions/healthFullName'
        description: Full name of the cluster health.
      object_meta:
        $ref: '#/definitions/metaObjectMeta'
        description: Metadata for the cluster object.
      spec:
        $ref: '#/definitions/healthHealthSpec'
        description: Status for the cluster health.
      status:
        $ref: '#/definitions/healthHealthStatus'
        description: Status for the cluster health.
    description: A Health resource holds a Kubernetes cluster's health data.
  healthHealthSpec:
    type: object
    description: Health Spec.
  healthHealthStatus:
    type: object
    properties:
      timestamp:
        type: string
        format: date-time
        description: Timestamp of the record.
      status:
        $ref: '#/definitions/statusResourceStatus'
        description: Health status of the cluster.
      message:
        type: string
        description: Message providing details.
      allocated_memory:
        $ref: '#/definitions/healthResourceAllocation'
        description: Memopry allocation of a cluster.
      allocated_cpu:
        $ref: '#/definitions/healthResourceAllocation'
        description: CPU allocation of a cluster.
      number_of_nodes:
        type: integer
        format: int32
        description: Number of nodes in cluster.
      nodes_health:
        type: array
        items:
          $ref: '#/definitions/healthNodeHealth'
        description: List of nodes and their health status in the cluster.
      etcd_health:
        $ref: '#/definitions/healthComponentGroupHealth'
        description: List of ETCD components' health status.
      scheduler_health:
        $ref: '#/definitions/healthComponentHealth'
        description: Scheduler's health status.
      controller_manager_health:
        $ref: '#/definitions/healthComponentHealth'
        description: Controller manager's health status.
    description: >-
      Health Provides information about cluster metadata, overall cluster health
      status,

      individial component healths, resource allocations and number of pods per
      component.
  healthListHealthsResponse:
    type: object
    properties:
      healths:
        type: array
        items:
          $ref: '#/definitions/healthHealth'
        description: List of healths.
    description: Response from listing Healths.
  healthNodeHealth:
    type: object
    properties:
      node_state:
        $ref: '#/definitions/healthComponentHealth'
        description: Status of Node.
      role:
        $ref: '#/definitions/healthNodeRole'
        description: Role of Node.
      utilization:
        $ref: '#/definitions/healthResourceMetrics'
        description: Resource utilization of a component.
      message:
        type: string
        description: Message contains the raw data of the node.
    description: Detailed health data for a node of cluster.
  healthNodeRole:
    type: string
    enum:
      - ROLE_UNDEFINED
      - ROLE_MASTER
      - ROLE_WORKER
    default: ROLE_UNDEFINED
    description: |-
      Roles of cluster nodes.

       - ROLE_UNDEFINED: Role undefined.
       - ROLE_MASTER: Role master.
       - ROLE_WORKER: Role worker.
  healthResourceAllocation:
    type: object
    properties:
      allocatable:
        type: number
        format: float
        description: Allocatable is quantity of resource that can be allocated.
      requested:
        type: number
        format: float
        description: Requested is requested quantity of the resource.
      units:
        type: string
        description: >-
          Units is the unit on which resource can be measured e.g. mb,
          millicores etc.
    description: ResourceAllocation is used for CPU and Memory metrics of a cluster.
  healthResourceMetrics:
    type: object
    properties:
      cpu_capacity:
        type: integer
        format: int32
        description: CPU capacity of a component.
      cpu_allocatable:
        type: integer
        format: int32
        description: CPU allocatable for a component.
      cpu_usage:
        type: integer
        format: int32
        description: CPU usage of a component.
      cpu_limits:
        type: integer
        format: int32
        description: CPU limit of a component.
      mem_capacity:
        type: number
        format: float
        description: Memory capacity of a component.
      mem_allocatable:
        type: number
        format: float
        description: Memory allocatable for a component.
      mem_usage:
        type: number
        format: float
        description: Memory usage of a component.
      mem_limits:
        type: number
        format: float
        description: Memory limits of a component.
      number_of_pods:
        type: integer
        format: int32
        description: Number of pods in a component.
    description: CPU and Memory metrics of a component.
  healthSearchScope:
    type: object
    properties:
      group:
        type: string
        description: Scope search to `group`; supports globbing; default (*).
      org_id:
        type: string
        description: Scope search to `org_id`; supports globbing; default (*).
      location:
        type: string
        description: Scope search to `location`; supports globbing; default (*).
      cluster_name:
        type: string
        description: Scope search to `cluster_name`; supports globbing; default (*).
      name:
        type: string
        description: Scope search to `name`; supports globbing; default (*).
    description: 'Scope to search by, any fields left empty will be considered all (*).'
  InspectionSpecInspectionType:
    type: string
    enum:
      - CONFORMANCE
      - E2E
      - LITE
    default: CONFORMANCE
    description: |-
      Types of scan.

       - CONFORMANCE: Conformance inspection.
       - E2E: E2E inspection.
       - LITE: Lite inspection.
  InspectionStageStatus:
    type: string
    enum:
      - UNKNOWN
      - RUNNING
      - PENDING
      - COMPLETE
      - UPLOAD
      - FINISH
      - STOP
      - ERROR
    default: UNKNOWN
    description: |-
      Status describes the status of the inspection.

       - UNKNOWN: Unknown - to be used if status of the current inspection is unknown.
       - RUNNING: Running - to indicate the inspection is currently running.
       - PENDING: Pending - to indicate that the inspection is waiting to be started.
       - COMPLETE: Complete - to indicate that the sonobuoy open source has completed the inspection.
       - UPLOAD: Upload - to indicate that the inspection results are being uploaded to S3.
       - FINISH: Finish - to indicate that the inspection has completed inspection + uploaded results to S3 successfully.
       - STOP: Stop - to stop the sonobuoy inspection.
       - ERROR: Error - to indicate that an error had occurred during the inspection.
  WatchInspectionsResponseEventType:
    type: string
    enum:
      - CREATE
      - UPDATE
      - DELETE
    default: CREATE
    description: |-
      Possible types of events.

       - CREATE: Create event sent.
       - UPDATE: Update event sent.
       - DELETE: Delete event sent.
  inspectionCreateInspectionRequest:
    type: object
    properties:
      inspection:
        $ref: '#/definitions/inspectionInspection'
        description: Inspection to create.
    description: Request to create a Inspection.
  inspectionCreateInspectionResponse:
    type: object
    properties:
      inspection:
        $ref: '#/definitions/inspectionInspection'
        description: Inspection created.
    description: Response from creating a Inspection.
  inspectionDeleteInspectionResponse:
    type: object
    properties:
      message:
        type: string
        description: Message regarding deletion.
    description: Response from deleting Inspection.
  inspectionFullName:
    type: object
    properties:
      org_id:
        type: string
        description: Org ID of the cluster organization.
      location:
        type: string
        description: Location of the cluster.
      cluster_name:
        type: string
        description: Name of the cluster.
      name:
        type: string
        description: Name of the inspection object.
    description: FullName of the inspection.
  inspectionGetInspectionResponse:
    type: object
    properties:
      inspection:
        $ref: '#/definitions/inspectionInspection'
        description: Inspection returned.
    description: Response from getting a Inspection.
  inspectionInspection:
    type: object
    properties:
      type_meta:
        $ref: '#/definitions/metaTypeMeta'
        description: Metadata describing the type of the resource.
      full_name:
        $ref: '#/definitions/inspectionFullName'
        description: Full name for the inspection.
      object_meta:
        $ref: '#/definitions/metaObjectMeta'
        description: Metadata for the cluster object.
      spec:
        $ref: '#/definitions/inspectionInspectionSpec'
        description: Spec for the Inspection.
      status:
        $ref: '#/definitions/inspectionInspectionStatus'
        description: Status of the Inspection object.
    description: >-
      An InspectionResource is used to create / stop an inspection on a cluster.
      The resource is cluster scoped

      and the type of scan can be defined based on the Inspection Type.

      The result of the inspection can be retrieved from the report in the
      status field.
  inspectionInspectionSpec:
    type: object
    properties:
      scan_type:
        $ref: '#/definitions/InspectionSpecInspectionType'
        description: Scan type requested.
    description: The cluster Inspection Spec.
  inspectionInspectionStage:
    type: object
    properties:
      status:
        $ref: '#/definitions/InspectionStageStatus'
        description: State of a resource.
    description: Different stages of a sonobuoy inspection.
  inspectionInspectionStatus:
    type: object
    properties:
      inspectionstatus:
        $ref: '#/definitions/inspectionInspectionStage'
        description: Common status for an resource.
      report:
        $ref: '#/definitions/inspectionReport'
        description: Report details.
    description: Status of the inspection.
  inspectionListInspectionsResponse:
    type: object
    properties:
      inspections:
        type: array
        items:
          $ref: '#/definitions/inspectionInspection'
        description: List of inspections.
    description: Response from listing Inspections.
  inspectionPatchInspectionRequest:
    type: object
    properties:
      inspection:
        $ref: '#/definitions/inspectionInspection'
        description: Patch Inspection.
    description: Request to patch a Inspection.
  inspectionPatchInspectionResponse:
    type: object
    properties:
      inspection:
        $ref: '#/definitions/inspectionInspection'
        description: Inspection to patch.
    description: Response from patching a Inspection.
  inspectionReport:
    type: object
    properties:
      info:
        $ref: '#/definitions/inspectionReportInfo'
        description: Meta-info of this report.
      diagnostic:
        type: object
        additionalProperties:
          type: string
        description: Map of all the diagnostic files in the report tarball.
      results:
        type: object
        additionalProperties:
          type: string
        description: Map of all the files ending in .xml.
      meta:
        type: object
        additionalProperties:
          type: string
        description: >-
          Map of files with metadata information about the scan (Config, query
          time, run).
      hosts:
        type: object
        additionalProperties:
          type: string
        description: 'Map of files containing host information (config, healthz).'
      tarball_download_url:
        type: string
        description: Download URL for the .tar.gz file with this full report.
    description: Encapsulates the data for a Inspection run.
  inspectionReportInfo:
    type: object
    properties:
      report_id:
        type: string
        description: Internal ID of the run.
      run_datetime:
        type: string
        format: date-time
        description: Date and time of the run.
      scan_type:
        type: string
        description: The scan type.
      num_inspections:
        type: string
        format: int64
        description: Total number of inspections as part of the scan.
      num_failed:
        type: string
        format: int64
        description: Number of inspections failed.
    description: |-
      Contains the metadata for a single report
      (e.g. report id, etc).
  inspectionSearchScope:
    type: object
    properties:
      group:
        type: string
        description: Scope search to `group`; supports globbing; default (*).
      org_id:
        type: string
        description: Scope search to `org_id`; supports globbing; default (*).
      location:
        type: string
        description: Scope search to `location`; supports globbing; default (*).
      cluster_name:
        type: string
        description: Scope search to `cluster_name`; supports globbing; default (*).
      name:
        type: string
        description: Scope search to `name`; supports globbing; default (*).
    description: 'Scope to search by, any fields left empty will be considered all (*).'
  inspectionUpdateInspectionRequest:
    type: object
    properties:
      inspection:
        $ref: '#/definitions/inspectionInspection'
        description: Update Inspection.
    description: Request to update (overwrite) a Inspection.
  inspectionUpdateInspectionResponse:
    type: object
    properties:
      inspection:
        $ref: '#/definitions/inspectionInspection'
        description: Inspection updated.
    description: Response from updating a Inspection.
  inspectionWatchInspectionsResponse:
    type: object
    properties:
      inspection:
        $ref: '#/definitions/inspectionInspection'
        description: Inspection event.
      type:
        $ref: '#/definitions/WatchInspectionsResponseEventType'
        description: Type of event.
    description: Streamed response from watching Inspections.
  WatchNamespacesResponseEventType:
    type: string
    enum:
      - CREATE
      - UPDATE
      - DELETE
    default: CREATE
    description: |-
      Possible types of events.

       - CREATE: Create event sent.
       - UPDATE: Update event sent.
       - DELETE: Delete event sent.
  namespaceCreateNamespaceRequest:
    type: object
    properties:
      namespace:
        $ref: '#/definitions/namespaceNamespace'
        description: Namespace to create.
    description: Request to create a Namespace.
  namespaceCreateNamespaceResponse:
    type: object
    properties:
      namespace:
        $ref: '#/definitions/namespaceNamespace'
        description: Namespace created.
    description: Response from creating a Namespace.
  namespaceDeleteNamespaceResponse:
    type: object
    properties:
      message:
        type: string
        description: Message regarding deletion.
    description: Response from deleting Namespace.
  namespaceFullName:
    type: object
    properties:
      org_id:
        type: string
        description: ID of Organization.
      location:
        type: string
        description: Location of parent Cluster.
      cluster_name:
        type: string
        description: Name of parent Cluster.
      name:
        type: string
        description: Name of this Namespace.
    description: |-
      Full name of the namespace. This includes the object name along
      with any parents or further identifiers.
  namespaceGetNamespaceResponse:
    type: object
    properties:
      namespace:
        $ref: '#/definitions/namespaceNamespace'
        description: Namespace returned.
    description: Response from getting a Namespace.
  namespaceListNamespacesResponse:
    type: object
    properties:
      namespaces:
        type: array
        items:
          $ref: '#/definitions/namespaceNamespace'
        description: List of namespaces.
    description: Response from listing Namespaces.
  namespaceNamespace:
    type: object
    properties:
      type_meta:
        $ref: '#/definitions/metaTypeMeta'
        description: Metadata describing the type of the resource.
      full_name:
        $ref: '#/definitions/namespaceFullName'
        description: Full name for the Namespace.
      object_meta:
        $ref: '#/definitions/metaObjectMeta'
        description: Metadata for the Namespace object.
      spec:
        $ref: '#/definitions/namespaceNamespaceSpec'
        description: Spec for the Namespace.
    description: A Namespace resource is a Kubernetes namespace managed by the platform.
  namespaceNamespaceSpec:
    type: object
    properties:
      workspace_name:
        type: string
        description: Name of Workspace which this Namespace belongs to.
    description: The Namespace spec.
  namespacePatchNamespaceRequest:
    type: object
    properties:
      namespace:
        $ref: '#/definitions/namespaceNamespace'
        description: Patch Namespace.
    description: Request to patch a Namespace.
  namespacePatchNamespaceResponse:
    type: object
    properties:
      namespace:
        $ref: '#/definitions/namespaceNamespace'
        description: Namespace to patch.
    description: Response from patching a Namespace.
  namespaceSearchScope:
    type: object
    properties:
      group:
        type: string
        description: Scope search to `group`; supports globbing; default (*).
      org_id:
        type: string
        description: Scope search to `org_id`; supports globbing; default (*).
      location:
        type: string
        description: Scope search to `location`; supports globbing; default (*).
      cluster_name:
        type: string
        description: Scope search to `cluster_name`; supports globbing; default (*).
      name:
        type: string
        description: Scope search to `name`; supports globbing; default (*).
    description: 'Scope to search by, any fields left empty will be considered all (*).'
  namespaceUpdateNamespaceRequest:
    type: object
    properties:
      namespace:
        $ref: '#/definitions/namespaceNamespace'
        description: Update Namespace.
    description: Request to update (overwrite) a Namespace.
  namespaceUpdateNamespaceResponse:
    type: object
    properties:
      namespace:
        $ref: '#/definitions/namespaceNamespace'
        description: Namespace updated.
    description: Response from updating a Namespace.
  namespaceWatchNamespacesResponse:
    type: object
    properties:
      namespace:
        $ref: '#/definitions/namespaceNamespace'
        description: Namespace event.
      type:
        $ref: '#/definitions/WatchNamespacesResponseEventType'
        description: Type of event.
    description: Streamed response from watching Namespaces.
